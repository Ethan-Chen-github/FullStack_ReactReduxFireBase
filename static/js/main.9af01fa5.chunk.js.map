{"version":3,"sources":["serviceWorker.js","config/firebaseConfig.js","store/actions/actionCreators.js","store/reducers/authReducer.js","store/reducers/todoListReducer.js","store/reducers/rootReducer.js","components/navbar/LoggedInLinks.js","store/database/asynchHandler.js","components/navbar/LoggedOutLinks.js","components/navbar/Navbar.js","components/register_screen/RegisterScreen.js","components/login_screen/LoginScreen.js","components/home_screen/TodoListCard.js","components/home_screen/TodoListLinks.js","components/home_screen/HomeScreen.js","components/list_screen/ItemCard.js","components/list_screen/ItemsList.js","components/list_screen/PanelLeft.js","components/list_screen/Diagram.js","components/list_screen/Property.js","components/list_screen/Dimension.js","components/list_screen/ListScreen.js","components/item_screen/ItemScreen.js","test/DatabaseTester.js","App.js","store/ReactReduxFirebaseApp.js","index.js"],"names":["Boolean","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","registerSuccess","type","registerError","error","logoutSuccess","initState","authReducer","state","action","authError","err","message","todoLists","todoListReducer","rootReducer","combineReducers","auth","todoList","firestore","firestoreReducer","firebaseReducer","LoggedInLinks","handleLogout","props","signOut","profile","this","className","to","onClick","initials","React","Component","compose","firebaseConnect","connect","dispatch","getState","then","actionCreators","logoutHandler","LoggedOutLinks","Navbar","close","NavbarRouter","withRouter","console","log","history","push","links","uid","header","actions","Fragment","waves","modal","flat","trigger","id","RegisterScreen","email","password","firstName","lastName","handleChange","e","target","setState","value","handleSubmit","preventDefault","newUser","register","onSubmit","htmlFor","name","onChange","getFirestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","isAdmin","catch","registerHandler","LoginScreen","authData","credentials","login","signInWithEmailAndPassword","loginHandler","TodoListCard","delete","WireFramers","class","style","paddingLeft","href","event","floating","icon","TodoListLinks","update","time","Date","getTime","owner","filter","map","key","updatetime","ordered","sort","a","b","x","y","HomeScreen","handleNewList","fireStore","add","list","docRef","firestoreConnect","ItemCard","isComplete","bool","goItem","index","moveUp","JSON","parse","stringify","items","t","i","j","moveDown","length","splice","Upid","Downid","item","cursor","description","assigned_to","due_date","completed","width","fab","direction","large","stopPropagation","ItemsList","taskInc","dueDateInc","compInc","sortTask","itemList","n","k","sortDueDate","sortStatae","addNewItem","data","newItem","fontSize","colspan","PanelLeft","ownProps","addContainer","control_list","updateState","addLabel","addButton","addTextfield","save","WireFramer","DimX","DimY","disableSave","disabled","enableZoomIn","updateZoomIn","enableZoomOut","updateZoomOut","enableSave","scale","textAlign","margin","height","color","borderColor","borderWidth","backgroundColor","placeholder","Diagram","borderStyle","position","transformOrigin","transform","String","top","left","control","posX","posY","fontColor","borderRadius","zIndex","rect","fill","strokeWidth","stroke","diagramSize","unselect","current_select","size","onDragStop","d","updateSelect","updateRepos","onResizeStop","ref","delta","updateResize","resizeHandleComponent","topRight","topLeft","bottomLeft","bottomRight","inputOnSelect2","inputOnSelect","Property","updateProperty","document","getElementById","updateProperty_Container","property","backGroundColor","showFontColor","showFontColorBool","onChangeComplete","hex","showBackgroundColor","showBackgroundColorBool","showBorderColor","showBorderColorBool","Dimension","updateDimState","min","max","defaultValue","enableUpdate","disableUpdate","ListScreen","escFunction","keyCode","ctrlKey","copyControl","Number","slice","addEventListener","prevProps","dimX","dimY","forEach","element","eleWidth","eleHeight","newScale","enableZoom","forceUpdate","bind","params","ItemScreen","current_item","createElement","get","checked","for","goList","DatabaseTester","handleClear","querySnapshot","handleReset","todoJson","todoListJson","App","admin","isLoaded","undefined","path","component","exact","ReactReduxFirebaseApp","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render"],"mappings":"wKAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kHCFNC,IAASC,cAVY,CACjBC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAKJT,QAAf,E,QCHO,SAASU,IACZ,MAAO,CAAEC,KAAM,oBAEZ,SAASC,EAAcC,GAC1B,MAAO,CAAEF,KAAM,iBAAkBE,SAQ9B,SAASC,IACZ,MAAO,CAAEH,KAAM,kB,yjBCvBnB,IAAMI,EAAY,GA+BHC,EA7BK,WAAgC,IAA/BC,EAA8B,uDAAtBF,EAAWG,EAAW,uCACjD,OAAQA,EAAOP,MACb,IDCuB,cCArB,OAAO,EAAP,GACKM,EADL,CAEEE,UAAW,eAEf,IDLyB,gBCMvB,OAAO,EAAP,GACKF,EADL,CAEEE,UAAW,OAEf,IDR0B,iBCSxB,OAAOF,EACT,IDd4B,mBCe1B,OAAO,EAAP,GACKA,EADL,CAEEE,UAAW,OAEf,IDlB0B,iBCmBxB,OAAO,EAAP,GACKF,EADL,CAEEE,UAAWD,EAAOE,IAAIC,UAE1B,QACE,OAAOJ,ICjCPF,EAAY,CACdO,UAAW,IAYAC,EATS,WAAgC,IAA/BN,EAA8B,uDAAtBF,EAAWG,EAAW,uCAI3C,OAHAA,EAAOP,KAGAM,GCKJO,EAPKC,YAAgB,CAClCC,KAAMV,EACNW,SAAUJ,EACVK,UAAWC,mBACX7B,SAAU8B,oB,gBCHNC,E,2MAGJC,aAAe,WAAO,IACZhC,EAAa,EAAKiC,MAAlBjC,SACR,EAAKiC,MAAMC,QAAQlC,I,wEAGX,IACAmC,EAAYC,KAAKH,MAAjBE,QACR,OACE,wBAAIE,UAAU,SACZ,4BAAI,kBAAC,IAAD,CAASC,GAAG,IAAIC,QAASH,KAAKJ,cAA9B,YADN,IAEE,4BAAI,kBAAC,IAAD,CAASM,GAAG,IAAID,UAAU,mCAAmCF,EAAQK,gB,GAbrDC,IAAMC,WAuBnBC,cACbC,4BACAC,YAAQ,MANiB,SAAAC,GAAQ,MAAK,CACtCZ,QAAS,SAAAlC,GAAQ,OAAI8C,ECbM,SAAC9C,GAAD,OAAc,SAAC8C,EAAUC,GAClD/C,EAAS0B,OAAOQ,UAAUc,MAAK,WAC3BF,EAASG,ODWeC,CAAclD,SAG/B2C,CAGbZ,GEpBaoB,E,iLARX,OACE,wBAAId,UAAY,SACd,4BAAI,kBAAC,IAAD,CAASC,GAAG,aAAZ,kB,GAJiBG,IAAMC,W,QCO7BU,E,2MAEJC,MAAQ,WAEJ,IAAMC,EAAgBC,YAAWH,GACjCI,QAAQC,IAAI,EAAKxB,OACjBuB,QAAQC,IAAIH,GACZ,EAAKrB,MAAMyB,QAAQC,KAAK,M,wEAGlB,IAAD,EACmBvB,KAAKH,MAAvBP,EADD,EACCA,KAAMS,EADP,EACOA,QACRyB,EAAQlC,EAAKmC,IAAM,kBAAC,EAAD,CAAe1B,QAASA,IAAc,kBAAC,EAAD,MAE/D,OADAqB,QAAQC,IAAIrB,KAAKH,OAEf,yBAAKI,UAAU,6BACb,yBAAKA,UAAU,aACb,kBAAC,QAAD,CAAOyB,OAAO,eAAeC,QAAS,kBAAC,IAAMC,SAAP,KAAgB,kBAAC,SAAD,CAAQzB,QAASH,KAAKiB,MAAOY,MAAM,QAAQC,MAAM,QAAQC,MAAI,GAA7D,QAA2E,kBAAC,SAAD,CAAQF,MAAM,QAAQC,MAAM,QAAQC,MAAI,GAAxC,QACjIC,QAAS,yBAAK/B,UAAY,aAAagC,GAAK,SAAnC,UAEK,kFACwD,6BADxD,iCAObT,Q,GA3BUnB,IAAMC,WAwCZa,cAAWZ,YACxBC,4BACAC,aAPsB,SAAA5B,GAAK,MAAK,CAChCS,KAAMT,EAAMjB,SAAS0B,KACrBS,QAASlB,EAAMjB,SAASmC,YAGAQ,CAGxBS,I,skBC9CIkB,E,2MACJrD,MAAQ,CACNsD,MAAO,GACPC,SAAU,GACVC,UAAW,GACXC,SAAU,I,EAGZC,aAAe,SAACC,GAAO,IACbC,EAAWD,EAAXC,OAER,EAAKC,UAAS,SAAA7D,GAAK,YACdA,EADc,eAEhB4D,EAAOR,GAAKQ,EAAOE,Y,EAIxBC,aAAe,SAACJ,GACdA,EAAEK,iBADkB,qBAGZhD,EAHY,EAGZA,MAAOhB,EAHK,EAGLA,MACPjB,EAAaiC,EAAbjC,SACFkF,EAAO,KAAQjE,GAErBgB,EAAMkD,SAASD,EAASlF,I,wEAGhB,IAAD,EACqBoC,KAAKH,MAAzBP,EADD,EACCA,KAAMP,EADP,EACOA,UACd,OAAIO,EAAKmC,IACA,kBAAC,IAAD,CAAUvB,GAAG,MAIpB,yBAAKD,UAAU,aACb,0BAAM+C,SAAUhD,KAAK4C,aAAc3C,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,YACA,yBAAKA,UAAU,eACb,2BAAOgD,QAAQ,SAAf,SACA,2BAAO1E,KAAK,QAAQ2E,KAAK,QAAQjB,GAAG,QAAQkB,SAAUnD,KAAKuC,gBAE7D,yBAAKtC,UAAU,eACb,2BAAOgD,QAAQ,YAAf,YACA,2BAAO1E,KAAK,WAAW2E,KAAK,WAAWjB,GAAG,WAAWkB,SAAUnD,KAAKuC,gBAEtE,yBAAKtC,UAAU,eACb,2BAAOgD,QAAQ,aAAf,cACA,2BAAO1E,KAAK,OAAO2E,KAAK,YAAYjB,GAAG,YAAYkB,SAAUnD,KAAKuC,gBAEpE,yBAAKtC,UAAU,eACb,2BAAOgD,QAAQ,YAAf,aACA,2BAAO1E,KAAK,OAAO2E,KAAK,WAAWjB,GAAG,WAAWkB,SAAUnD,KAAKuC,gBAElE,yBAAKtC,UAAU,eACb,4BAAQ1B,KAAK,SAAS0B,UAAU,gCAAhC,WACClB,EAAY,yBAAKkB,UAAU,mBAAkB,2BAAIlB,IAAuB,Y,GAvDxDuB,aAwEdC,cACbC,4BACAC,aAXsB,SAAA5B,GAAK,MAAK,CAChCS,KAAMT,EAAMjB,SAAS0B,KACrBP,UAAWF,EAAMS,KAAKP,cAGG,SAAA2B,GAAQ,MAAK,CACtCqC,SAAU,SAACD,EAASlF,GAAV,OAAuB8C,EHxDJ,SAACoC,EAASlF,GAAV,OAAuB,SAAC8C,EAAUC,EAAX,GAA2C,IACvFnB,GAAY4D,EAD0E,EAAnBA,gBAEzExF,EAAS0B,OAAO+D,+BACZP,EAAQX,MACRW,EAAQV,UACVxB,MAAK,SAAA0C,GAAI,OAAI9D,EAAU+D,WAAW,SAASC,IAAIF,EAAKG,KAAKhC,KAAKiC,IAAI,CAChErB,UAAWS,EAAQT,UACnBC,SAAUQ,EAAQR,SAClBH,MAAOW,EAAQX,MACfwB,SAAS,EACTvD,SAAS,GAAD,OAAK0C,EAAQT,UAAU,IAAvB,OAA4BS,EAAQR,SAAS,SACrD1B,MAAK,WACLF,EAASG,MACV+C,OAAM,SAAC5E,GACN0B,EAASG,OG0C2BgD,CAAgBf,EAASlF,SAGtD2C,CAGb2B,G,6jBC1EI4B,E,2MACJjF,MAAQ,CACNsD,MAAO,GACPC,SAAU,I,EAGZG,aAAe,SAACC,GAAO,IACbC,EAAWD,EAAXC,OAER,EAAKC,UAAS,SAAA7D,GAAK,YACdA,EADc,eAEhB4D,EAAOR,GAAKQ,EAAOE,Y,EAIxBC,aAAe,SAACJ,GACdA,EAAEK,iBADkB,qBAKZhD,EALY,EAKZA,MAAOhB,EALK,EAKLA,MAGTkF,EAAW,CACfnG,SAHmBiC,EAAbjC,SAINoG,YAHe,KAAQnF,IAMzBgB,EAAMoE,MAAMF,I,wEAGJ,IAAD,EACqB/D,KAAKH,MAAzBP,EADD,EACCA,KAAMP,EADP,EACOA,UACd,OAAIO,EAAKmC,IACA,kBAAC,IAAD,CAAUvB,GAAG,MAIpB,yBAAKD,UAAU,aACb,yBAAKA,UAAU,OACb,0BAAM+C,SAAUhD,KAAK4C,aAAc3C,UAAU,gBAC3C,wBAAIA,UAAU,2BAAd,SACA,yBAAKA,UAAU,eACb,2BAAOgD,QAAQ,SAAf,SACA,2BAAOhD,UAAU,SAAS1B,KAAK,QAAQ2E,KAAK,QAAQjB,GAAG,QAAQkB,SAAUnD,KAAKuC,gBAEhF,yBAAKtC,UAAU,eACb,2BAAOgD,QAAQ,YAAf,YACA,2BAAOhD,UAAU,SAAS1B,KAAK,WAAW2E,KAAK,WAAWjB,GAAG,WAAWkB,SAAUnD,KAAKuC,gBAEzF,yBAAKtC,UAAU,eACb,4BAAQ1B,KAAK,SAAS0B,UAAU,gCAAhC,SACClB,EAAY,yBAAKkB,UAAU,mBAAkB,2BAAIlB,IAAuB,MAG3E,4CACc,6BADd,yBAEwB,6BAFxB,oBAGmB,6BACjB,+BAIJ,yBAAKkB,UAAU,iBAAf,aACY,6BADZ,Y,GA/DgBK,aAsFXC,cACbC,4BACAC,aAfsB,SAAA5B,GAAK,MAAK,CAChCE,UAAWF,EAAMS,KAAKP,UACtBO,KAAMT,EAAMjB,SAAS0B,SAGI,SAAAoB,GAAQ,MAAK,CACtCuD,MAAO,SAAAF,GAAQ,OAAIrD,EJrFO,SAAC,GAAD,IAAGsD,EAAH,EAAGA,YAAapG,EAAhB,EAAgBA,SAAhB,OAA+B,SAAC8C,EAAUC,GAClE/C,EAAS0B,OAAO4E,2BACdF,EAAY7B,MACZ6B,EAAY5B,UACZxB,MAAK,WACLQ,QAAQC,IAAI,iBACZX,EAAS,CAAEnC,KAAM,qBAChBqF,OAAM,SAAC5E,GACR0B,EAAS,CAAEnC,KAAM,cAAeS,YI6ERmF,CAAaJ,SAO5BxD,CAGbuD,G,0BC1DaM,E,2MAhCXC,OAAS,WACajB,yBACRG,WAAW,eAAeC,IAAI,EAAK3D,MAAMyE,YAAYrC,IAAIoC,U,wEAG7D,IAAD,OACGC,EAAgBtE,KAAKH,MAArByE,YAER,OADAlD,QAAQC,IAAI,8BAAgCiD,EAAYrC,IAOpD,wBAAIsC,MAAM,yBAAyBC,MAAQ,CAACC,YAAY,KACpD,6BACA,2BAAIH,EAAYpB,MAChB,uBAAGwB,KAAK,KAAKH,MAAM,oBAAoBtE,UAAY,SAE/C,kBAAC,QAAD,CAAOyB,OAAO,eAAeC,QAAS,kBAAC,IAAMC,SAAP,KAAgB,kBAAC,SAAD,CAAQzB,QAAS,SAAAwE,GAAWA,EAAM9B,iBAAkB,EAAKwB,UAAYxC,MAAM,QAAQC,MAAM,QAAQC,MAAI,GAArG,QAAmH,kBAAC,SAAD,CAAQ5B,QAAS,SAAAwE,GAAWA,EAAM9B,kBAAmBhB,MAAM,QAAQC,MAAM,QAAQC,MAAI,GAArF,QACzKC,QAAS,kBAAC,SAAD,CAAQ4C,UAAQ,EAACC,KAAM,kBAAC,OAAD,iBAC5B,+DACqC,6BADrC,gD,GAvBGxE,IAAMC,WCI3BwE,E,mLAES7C,GACWmB,yBAERG,WAAW,eAChBC,IAAIvB,GACJ8C,OAAO,CACJC,MAAM,IAAIC,MAAOC,c,iCAIlBZ,GACP,OAAOA,EAAYa,MAAQnF,KAAKH,MAAMP,KAAK6C,Q,+BAKrC,IAAD,OACDmC,EAActE,KAAKH,MAAMyE,YAGzBa,EAAQnF,KAAKH,MAAMP,KAAK6C,MAS5B,OANAf,QAAQC,IAAI,0CACZD,QAAQC,IAAIiD,GACZlD,QAAQC,IAAI8D,GAKR,yBAAKlF,UAAU,sBACX,6BACA,6BACCqE,GAAeA,EAAYc,QAAO,SAAAd,GAAW,OAAGA,EAAYa,OAASA,KAAOE,KAAI,SAAAf,GAAW,OACxF,kBAAC,IAAD,CAAMpE,GAAI,gBAAkBoE,EAAYrC,GAAIqD,IAAKhB,EAAYrC,GAAI9B,QAAS,kBAAM,EAAKoF,WAAWjB,EAAYrC,MACvG,wBAAIsC,MAAM,cACP,kBAAC,EAAD,CAAcD,YAAaA,c,GAtC3BjE,IAAMC,WAiEnBC,cAAQE,aAjBC,SAAC5B,GAUrB,OARIA,EAAMW,UAAUgG,QAAQlB,aACxBzF,EAAMW,UAAUgG,QAAQlB,YAAYmB,MAAK,SAAUC,EAAGC,GAClD,IAAIC,EAAIF,EAAEV,KACNa,EAAIF,EAAEX,KACV,OAAOY,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,KAIjC,CACHvB,YAAazF,EAAMW,UAAUgG,QAAQlB,YAErChF,KAAMT,EAAMjB,SAAS0B,SAIdiB,CAAkCuE,GC/D3CgB,G,2MAEFC,c,sBAAgB,8BAAAL,EAAA,6DACNM,EAAY5C,yBADN,SAIS4C,EAAUzC,WAAW,eAAe0C,IAEjD,CAACd,MAAO,EAAKtF,MAAMP,KAAK6C,MAAMe,KAAM,UAAWgD,KAAM,GAAI,KAAS,IAAK,KAAS,IAAKlB,MAAM,IAAIC,MAAOC,YANlG,OAINiB,EAJM,OASZ/E,QAAQC,IAAI,EAAKxB,OACjBuB,QAAQC,IAAI,EAAKxB,MAAMyE,aACvB,EAAKzE,MAAMyB,QAAQC,KAAK,gBAAkB4E,EAAOlE,IAXrC,2C,wEAmBZ,OAAKjC,KAAKH,MAAMP,KAAKmC,IAKjB,yBAAKxB,UAAU,uBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,OAGJ,yBAAKA,UAAU,UACX,yBAAKsE,MAAM,aACP,yBAAKtE,UAAU,UAAf,cACe,6BADf,OAMJ,yBAAKA,UAAU,2BACX,4BAAQA,UAAU,uBAAuBE,QAASH,KAAK+F,cAAexB,MAAM,sCAA5E,4BAnBT,kBAAC,IAAD,CAAUrE,GAAG,e,GAtBPI,aA0DVC,eACXE,aAPoB,SAAC5B,GACrB,MAAO,CACHS,KAAMT,EAAMjB,SAAS0B,SAMzB8G,2BAAiB,CACb,CAAE7C,WAAY,iBAHPhD,CAKbuF,IC3DIO,G,2MAGFC,WAAa,SAACC,GACV,OAAY,GAARA,EACO,WAGA,W,EAUfC,OAAS,WAEapD,yBAClBhC,QAAQC,IAAI,EAAKxB,OAEjB,EAAKA,MAAMyB,QAAQC,KAAK,aAAe,EAAK1B,MAAMN,SAAS0C,GAAK,SAAW,EAAKpC,MAAM4G,Q,EAQ1FC,OAAS,WAEL,IAAID,EAAQ,EAAK5G,MAAM4G,MACnBP,EAAOS,KAAKC,MAAMD,KAAKE,UAAU,EAAKhH,MAAMN,SAASuH,QAGzD,GAAa,GAATL,EAAY,CAEZ,IAAIM,EAAIb,EAAKO,GACbP,EAAKO,GAASP,EAAKO,EAAQ,GAC3BP,EAAKO,EAAQ,GAAKM,EAElB,IAAIC,EAAId,EAAKO,GAAOnB,IACpBY,EAAKO,GAAOnB,IAAMY,EAAKO,EAAQ,GAAGnB,IAClCY,EAAKO,EAAQ,GAAGnB,IAAM0B,EAEtB,IAAIC,EAAIf,EAAKO,GAAOxE,GACpBiE,EAAKO,GAAOxE,GAAKiE,EAAKO,EAAQ,GAAGxE,GACjCiE,EAAKO,EAAQ,GAAGxE,GAAKgF,EAIP7D,yBACRG,WAAW,aAChBC,IAAI,EAAK3D,MAAMN,SAAS0C,IAExB8C,OAAO,CACJ+B,MAAOZ,K,EAKnBgB,SAAW,WAEP,IAAIT,EAAQ,EAAK5G,MAAM4G,MACnBP,EAAOS,KAAKC,MAAMD,KAAKE,UAAU,EAAKhH,MAAMN,SAASuH,QAGzD,GAAIL,GAASP,EAAKiB,OAAS,EAAG,CAE1B,IAAIJ,EAAIb,EAAKO,GACbP,EAAKO,GAASP,EAAKO,EAAQ,GAC3BP,EAAKO,EAAQ,GAAKM,EAElB,IAAIC,EAAId,EAAKO,GAAOnB,IACpBY,EAAKO,GAAOnB,IAAMY,EAAKO,EAAQ,GAAGnB,IAClCY,EAAKO,EAAQ,GAAGnB,IAAM0B,EAEtB,IAAIC,EAAIf,EAAKO,GAAOxE,GACpBiE,EAAKO,GAAOxE,GAAKiE,EAAKO,EAAQ,GAAGxE,GACjCiE,EAAKO,EAAQ,GAAGxE,GAAKgF,EAIP7D,yBACRG,WAAW,aAChBC,IAAI,EAAK3D,MAAMN,SAAS0C,IAExB8C,OAAO,CACJ+B,MAAOZ,K,EAKnB7B,OAAS,WAEL,IAAIoC,EAAQ,EAAK5G,MAAM4G,MACnBP,EAAOS,KAAKC,MAAMD,KAAKE,UAAU,EAAKhH,MAAMN,SAASuH,QAGzDZ,EAAKkB,OAAOX,EAAO,GACnB,IAAK,IAAIO,EAAIP,EAAOO,EAAId,EAAKiB,OAAQH,IACjCd,EAAKc,GAAG1B,KAAO,EACfY,EAAKc,GAAG/E,IAAM,EAGAmB,yBACRG,WAAW,aAChBC,IAAI,EAAK3D,MAAMN,SAAS0C,IAExB8C,OAAO,CACJ+B,MAAOZ,K,EAMnBmB,KAAO,WAEH,OAAa,GADD,EAAKxH,MAAM4G,MAGZ,OAGA,U,EAIfa,OAAS,WAGL,OAFY,EAAKzH,MAAM4G,OACV,EAAK5G,MAAMN,SAASuH,MAAMK,OACjB,EAEX,OAGA,Q,4GAIL,IAAD,OACGI,EAASvH,KAAKH,MAAd0H,KACR,OAUI,wBAAI/C,MAAO,CAAEgD,OAAQ,WAAavH,UAAU,uCAAuCE,QAASH,KAAKwG,QAI7F,wBAAKvG,UAAU,cAAf,IAA+BsH,EAAKE,YAChC,6BADJ,gBAEkBF,EAAKG,aAEvB,wBAAKzH,UAAU,cAAf,IAA+BsH,EAAKI,UACpC,wBAAI1H,UAAU,cAAcD,KAAKsG,WAAWiB,EAAKK,YAEjD,wBAAIC,MAAM,MACN,6BAQI,kBAAC,SAAD,CACIjD,UAAQ,EACRkD,IAAK,CAAEC,UAAW,QAClB9H,UAAU,MACV+H,OAAK,EACLnD,KAAM,kBAAC,OAAD,aACN5C,GAAG,gBAGH,kBAAC,SAAD,CAAQ2C,UAAQ,EAACC,KAAM,kBAAC,OAAD,cAAoB5E,UAAU,MAAME,QAAS,SAAAwE,GAAWA,EAAMsD,kBAAmB,EAAK5D,YAC7G,kBAAC,SAAD,CAAQO,UAAQ,EAACC,KAAM,kBAAC,OAAD,uBAA6B5E,UAAWD,KAAKsH,SAAUnH,QAAS,SAAAwE,GAAWA,EAAMsD,kBAAmB,EAAKf,cAChI,kBAAC,SAAD,CAAQtC,UAAQ,EAACC,KAAM,kBAAC,OAAD,qBAA2B5E,UAAWD,KAAKqH,OAAQlH,QAAS,SAAAwE,GAAWA,EAAMsD,kBAAmB,EAAKvB,oB,GAxLjIrG,IAAMC,WA+Mda,eAAWkF,ICpNpB6B,G,2MAEFrJ,MAAQ,CACJsJ,SAAS,EACTC,YAAY,EACZC,SAAS,G,EAGbC,SAAW,WACP,IAAIC,EAAW5B,KAAKC,MAAMD,KAAKE,UAAU,EAAKhH,MAAMN,SAASuH,QAC7D,GAAI,EAAKjI,MAAMsJ,QAAS,CACpB,EAAKzF,SAAS,CAAEyF,SAAS,IAEzB,IADA,IAAIK,EAAID,EAASpB,OACRH,EAAI,EAAGA,EAAIwB,EAAI,EAAGxB,IACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIuB,EAAIxB,EAAI,EAAGC,IAC3B,GAAIsB,EAAStB,GAAGQ,YAAcc,EAAStB,EAAI,GAAGQ,YAAa,CACvD,IAAIV,EAAIwB,EAAStB,GACjBsB,EAAStB,GAAKsB,EAAStB,EAAI,GAC3BsB,EAAStB,EAAI,GAAKF,EAElB,IAAI0B,EAAIF,EAAStB,GAAG3B,IACpBiD,EAAStB,GAAG3B,IAAMiD,EAAStB,EAAI,GAAG3B,IAClCiD,EAAStB,EAAI,GAAG3B,IAAMmD,EAElBA,EAAIF,EAAStB,GAAGhF,GACpBsG,EAAStB,GAAGhF,GAAKsG,EAAStB,EAAI,GAAGhF,GACjCsG,EAAStB,EAAI,GAAGhF,GAAKwG,OAMhC,CACD,EAAK/F,SAAS,CAAEyF,SAAS,IAEzB,IADIK,EAAID,EAASpB,OACRH,EAAI,EAAGA,EAAIwB,EAAI,EAAGxB,IACvB,IAASC,EAAI,EAAGA,EAAIuB,EAAIxB,EAAI,EAAGC,IAC3B,GAAIsB,EAAStB,GAAGQ,YAAcc,EAAStB,EAAI,GAAGQ,YAAa,CACnDV,EAAIwB,EAAStB,GACjBsB,EAAStB,GAAKsB,EAAStB,EAAI,GAC3BsB,EAAStB,EAAI,GAAKF,EAEd0B,EAAIF,EAAStB,GAAG3B,IACpBiD,EAAStB,GAAG3B,IAAMiD,EAAStB,EAAI,GAAG3B,IAClCiD,EAAStB,EAAI,GAAG3B,IAAMmD,EAElBA,EAAIF,EAAStB,GAAGhF,GACpBsG,EAAStB,GAAGhF,GAAKsG,EAAStB,EAAI,GAAGhF,GACjCsG,EAAStB,EAAI,GAAGhF,GAAKwG,GAKnBrF,yBACRG,WAAW,aAChBC,IAAI,EAAK3D,MAAMN,SAAS0C,IAExB8C,OAAO,CACJ+B,MAAOyB,K,EAMnBG,YAAc,WACV,IAAIH,EAAW5B,KAAKC,MAAMD,KAAKE,UAAU,EAAKhH,MAAMN,SAASuH,QAC7D,GAAI,EAAKjI,MAAMsJ,QAAS,CACpB,EAAKzF,SAAS,CAAEyF,SAAS,IAEzB,IADA,IAAIK,EAAID,EAASpB,OACRH,EAAI,EAAGA,EAAIwB,EAAI,EAAGxB,IACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIuB,EAAIxB,EAAI,EAAGC,IAC3B,GAAIsB,EAAStB,GAAGU,SAAWY,EAAStB,EAAI,GAAGU,SAAU,CACjD,IAAIZ,EAAIwB,EAAStB,GACjBsB,EAAStB,GAAKsB,EAAStB,EAAI,GAC3BsB,EAAStB,EAAI,GAAKF,EAElB,IAAI0B,EAAIF,EAAStB,GAAG3B,IACpBiD,EAAStB,GAAG3B,IAAMiD,EAAStB,EAAI,GAAG3B,IAClCiD,EAAStB,EAAI,GAAG3B,IAAMmD,EAElBA,EAAIF,EAAStB,GAAGhF,GACpBsG,EAAStB,GAAGhF,GAAKsG,EAAStB,EAAI,GAAGhF,GACjCsG,EAAStB,EAAI,GAAGhF,GAAKwG,OAMhC,CACD,EAAK/F,SAAS,CAAEyF,SAAS,IAEzB,IADIK,EAAID,EAASpB,OACRH,EAAI,EAAGA,EAAIwB,EAAI,EAAGxB,IACvB,IAASC,EAAI,EAAGA,EAAIuB,EAAIxB,EAAI,EAAGC,IAC3B,GAAIsB,EAAStB,GAAGU,SAAWY,EAAStB,EAAI,GAAGU,SAAU,CAC7CZ,EAAIwB,EAAStB,GACjBsB,EAAStB,GAAKsB,EAAStB,EAAI,GAC3BsB,EAAStB,EAAI,GAAKF,EAEd0B,EAAIF,EAAStB,GAAG3B,IACpBiD,EAAStB,GAAG3B,IAAMiD,EAAStB,EAAI,GAAG3B,IAClCiD,EAAStB,EAAI,GAAG3B,IAAMmD,EAElBA,EAAIF,EAAStB,GAAGhF,GACpBsG,EAAStB,GAAGhF,GAAKsG,EAAStB,EAAI,GAAGhF,GACjCsG,EAAStB,EAAI,GAAGhF,GAAKwG,GAKnBrF,yBACRG,WAAW,aAChBC,IAAI,EAAK3D,MAAMN,SAAS0C,IAExB8C,OAAO,CACJ+B,MAAOyB,K,EAMnBI,WAAa,WACT,IAAIJ,EAAW5B,KAAKC,MAAMD,KAAKE,UAAU,EAAKhH,MAAMN,SAASuH,QAC7D,GAAI,EAAKjI,MAAMsJ,QAAS,CACpB,EAAKzF,SAAS,CAAEyF,SAAS,IAEzB,IADA,IAAIK,EAAID,EAASpB,OACRH,EAAI,EAAGA,EAAIwB,EAAI,EAAGxB,IACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIuB,EAAIxB,EAAI,EAAGC,IAC3B,GAAIsB,EAAStB,GAAGW,UAAYW,EAAStB,EAAI,GAAGW,UAAW,CACnD,IAAIb,EAAIwB,EAAStB,GACjBsB,EAAStB,GAAKsB,EAAStB,EAAI,GAC3BsB,EAAStB,EAAI,GAAKF,EAElB,IAAI0B,EAAIF,EAAStB,GAAG3B,IACpBiD,EAAStB,GAAG3B,IAAMiD,EAAStB,EAAI,GAAG3B,IAClCiD,EAAStB,EAAI,GAAG3B,IAAMmD,EAElBA,EAAIF,EAAStB,GAAGhF,GACpBsG,EAAStB,GAAGhF,GAAKsG,EAAStB,EAAI,GAAGhF,GACjCsG,EAAStB,EAAI,GAAGhF,GAAKwG,OAMhC,CACD,EAAK/F,SAAS,CAAEyF,SAAS,IAEzB,IADIK,EAAID,EAASpB,OACRH,EAAI,EAAGA,EAAIwB,EAAI,EAAGxB,IACvB,IAASC,EAAI,EAAGA,EAAIuB,EAAIxB,EAAI,EAAGC,IAC3B,GAAIsB,EAAStB,GAAGW,UAAYW,EAAStB,EAAI,GAAGW,UAAW,CAC/Cb,EAAIwB,EAAStB,GACjBsB,EAAStB,GAAKsB,EAAStB,EAAI,GAC3BsB,EAAStB,EAAI,GAAKF,EAEd0B,EAAIF,EAAStB,GAAG3B,IACpBiD,EAAStB,GAAG3B,IAAMiD,EAAStB,EAAI,GAAG3B,IAClCiD,EAAStB,EAAI,GAAG3B,IAAMmD,EAElBA,EAAIF,EAAStB,GAAGhF,GACpBsG,EAAStB,GAAGhF,GAAKsG,EAAStB,EAAI,GAAGhF,GACjCsG,EAAStB,EAAI,GAAGhF,GAAKwG,GAKnBrF,yBACRG,WAAW,aAChBC,IAAI,EAAK3D,MAAMN,SAAS0C,IAExB8C,OAAO,CACJ+B,MAAOyB,K,EAKnBK,WAAa,WAGT,IAAIC,EAAOlC,KAAKC,MAAMD,KAAKE,UAAU,EAAKhH,MAAMN,SAASuH,QAIrDgC,EAAU,CACVpB,YAAa,OACbE,WAAW,EACXD,SAAU,aACVF,YAAa,OACbxF,GAAI4G,EAAK1B,OACT7B,IAAKuD,EAAK1B,QAEd0B,EAAKtH,KAAKuH,GACV1H,QAAQC,IAAIwH,GACMzF,yBACRG,WAAW,aAChBC,IAAI,EAAK3D,MAAMN,SAAS0C,IAExB8C,OAAO,CACJ+B,MAAO+B,K,wEAQf,IAAMtJ,EAAWS,KAAKH,MAAMN,SACtBuH,EAAQvH,EAASuH,MAEvB,OADA1F,QAAQC,IAAI,0BAA4B9B,EAAS0C,IAE7C,yBAAKhC,UAAU,sBACX,2BAAOA,UAAU,aACb,+BACI,4BACI,wBAAIsE,MAAM,MAAMpE,QAASH,KAAKsI,SAAU9D,MAAO,CAAEgD,OAAQ,UAAWuB,SAAU,SAA9E,QACA,wBAAIxE,MAAM,MAAMpE,QAASH,KAAK0I,YAAalE,MAAO,CAAEgD,OAAQ,UAAWuB,SAAU,SAAjF,YACA,wBAAIxE,MAAM,MAAMpE,QAASH,KAAK2I,WAAYnE,MAAO,CAAEgD,OAAQ,UAAWuB,SAAU,SAAhF,UACA,wCAGR,+BACKjC,GAASA,EAAMzB,KAAI,SAAUkC,EAAMd,GAEhC,OADAc,EAAKtF,GAAKsF,EAAKjC,IAGX,kBAAC,GAAD,CAAU/F,SAAUA,EAAU+F,IAAKmB,EAAOA,MAAOA,EAAOc,KAAMA,OAKtE,wBAAIpH,QAASH,KAAK4I,WAAYpE,MAAO,CAAEgD,OAAQ,UAAWuB,SAAU,SAGhE,wBAAIC,QAAQ,IAAI/G,GAAG,WAAnB,wB,GAxOJ5B,IAAMC,WCFxB2I,ID+PS1I,YACXE,aAToB,SAAC5B,EAAOqK,GAE5B,MAAO,CACH3J,SAFa2J,EAAS3J,SAGtBD,KAAMT,EAAMjB,SAAS0B,SAMzB8G,2BAAiB,CACb,CAAE7C,WAAY,eAHPhD,CAKb2H,I,2MChQEiB,aAAe,WAuBX,EAAKtJ,MAAMuJ,aAAa7H,KAnBR,CACZ,KAAQ,YACR,MAAS,KACT,MACI,CACI,KAAQ,EACR,KAAQ,EACR,MAAS,QACT,OAAU,QACV,SAAY,GACZ,UAAc,UACd,gBAAmB,UACnB,YAAe,UACf,YAAe,EACf,aAAgB,KAM5B,EAAK1B,MAAMwJ,YAAY,EAAKxJ,MAAMuJ,cAClChI,QAAQC,IAAI,EAAKxB,Q,EAGrByJ,SAAW,WAsBP,EAAKzJ,MAAMuJ,aAAa7H,KAnBZ,CACR,KAAQ,QACR,MAAS,mBACT,MACI,CACI,KAAQ,EACR,KAAQ,EACR,MAAS,QACT,OAAU,OACV,SAAY,GACZ,UAAc,UACd,gBAAmB,UACnB,YAAe,UACf,YAAe,EACf,aAAgB,KAM5B,EAAK1B,MAAMwJ,YAAY,EAAKxJ,MAAMuJ,cAClChI,QAAQC,IAAI,EAAKxB,Q,EAGrB0J,UAAY,WAuBR,EAAK1J,MAAMuJ,aAAa7H,KAnBX,CACT,KAAQ,SACR,MAAS,SACT,MACI,CACI,KAAQ,EACR,KAAQ,EACR,MAAS,QACT,OAAU,OACV,SAAY,GACZ,UAAc,UACd,gBAAmB,UACnB,YAAe,UACf,YAAe,EACf,aAAgB,KAM5B,EAAK1B,MAAMwJ,YAAY,EAAKxJ,MAAMuJ,cAClChI,QAAQC,IAAI,EAAKxB,Q,EAGrB2J,aAAe,WAsBX,EAAK3J,MAAMuJ,aAAa7H,KAnBR,CACZ,KAAQ,YACR,MAAS,QACT,MACI,CACI,KAAQ,EACR,KAAQ,EACR,MAAS,QACT,OAAU,OACV,SAAY,GACZ,UAAc,UACd,gBAAmB,UACnB,YAAe,UACf,YAAe,EACf,aAAgB,KAM5B,EAAK1B,MAAMwJ,YAAY,EAAKxJ,MAAMuJ,cAClChI,QAAQC,IAAI,EAAKxB,Q,EAGrB4J,KAAO,WAEH,IAAIZ,EAAOlC,KAAKC,MAAMD,KAAKE,UAAU,EAAKhH,MAAMuJ,eAE1CpD,EAAY5C,yBAElBhC,QAAQC,IAAI,EAAKxB,OACjBmG,EAAUzC,WAAW,eAChBC,IAAI,EAAK3D,MAAM6J,WAAWzH,IAC1B8C,OAAO,CACJmB,KAAM2C,EACNc,KAAO,EAAK9J,MAAM8J,KAClBC,KAAO,EAAK/J,MAAM+J,OAE1B,EAAK/J,MAAMgK,e,EAGf5I,MAAQ,WAEJ,EAAKpB,MAAMyB,QAAQC,KAAK,M,wEAIxB,OACI,yBAAKtB,UAAU,8BAA8BgC,GAAK,aAC9C,+BACA,gCAAK,4BACL,6BACI,uBAAGsC,MAAM,4CAA4CuF,SAAW9J,KAAKH,MAAMkK,cAAc,uBAAGxF,MAAM,iBAAkBpE,QAAWH,KAAKH,MAAMmK,cAAjD,YACzF,uBAAGzF,MAAM,4CAA4CuF,SAAW9J,KAAKH,MAAMoK,eAAe,uBAAG1F,MAAM,iBAAkBpE,QAAWH,KAAKH,MAAMqK,eAAjD,aAG1F,4BAAQ3F,MAAM,mCAAmChG,KAAK,SAAS2E,KAAK,SAAS4G,SAAY9J,KAAKH,MAAMsK,WAAYhK,QAAWH,KAAKyJ,MAAhI,QAGAzJ,KAAKH,MAAMsK,WACX,4BAAQ5F,MAAM,mCAAmChG,KAAK,SAAS2E,KAAK,SAAS/C,QAAWH,KAAKiB,OAA7F,SAEA,kBAAC,QAAD,CAAOS,OAAO,WAAWC,QAAS,kBAAC,IAAMC,SAAP,KAAgB,kBAAC,SAAD,CAAQzB,QAASH,KAAKiB,MAAOY,MAAM,QAAQC,MAAM,QAAQC,MAAI,GAA7D,QAA2E,kBAAC,SAAD,CAAQF,MAAM,QAAQC,MAAM,QAAQC,MAAI,GAAxC,QAAwEC,QAAS,yBAAKuC,MAAM,oCAAX,UAE1M,6EACmD,6BADnD,yCASR,gCAAK,8CACgC,IAAjBvE,KAAKH,MAAMuK,MAAY,OAG3C,6BACA,yBAAK5F,MAAO,CAAC6F,UAAU,SAAUC,OAAQ,IAErC,yBAAKzC,MAAM,MAAM0C,OAAO,MAAMpK,QAAWH,KAAKmJ,aAAc3E,MAAO,CAAEgD,OAAQ,YACzE,0BAAMK,MAAM,MAAM0C,OAAO,MAAMtI,GAAK,UAExC,uBAAGuC,MAAO,CAAC6F,UAAU,SAAUC,QAAS,KAAxC,aAEA,6BACA,6BAEA,2BAAOnK,QAAWH,KAAKsJ,SAAU9E,MAAO,CAAEgD,OAAQ,UAAWuB,SAAU,GAAIyB,MAAQ,YAAnF,oBAGA,uBAAGhG,MAAO,CAAC6F,UAAU,SAAUC,OAAQ,IAAvC,SAEA,6BACA,6BAEA,4BAAQnK,QAAWH,KAAKuJ,UACxB/E,MAAO,CAAEgD,OAAQ,UAAWK,MAAQ,IAAK0C,OAAS,GAAIxB,SAAU,GAAI0B,YAAa,UAAUC,YAAa,EAAGC,gBAAiB,YAD5H,UAIA,uBAAGnG,MAAO,CAAC6F,UAAU,SAAUC,OAAQ,IAAvC,UAEA,6BAEA,2BAAO/L,KAAK,OAAQoE,MAAQ,GAAGiI,YAAY,QACpCpG,MAAS,CAACqD,MAAO,IAAKL,OAAQ,UAAWuB,SAAU,IAAI5I,QAAWH,KAAKwJ,eAC9E,uBAAGhF,MAAO,CAAC6F,UAAU,SAAUC,OAAQ,IAAvC,mB,GApMIjK,IAAMC,YA6Mfa,eAAW8H,I,UC2HX4B,I,iMArUET,GAMT,MAAO,CACHU,YAAa,QACbP,OAAQvK,KAAKH,MAAM+J,KAAO,KAC1B/B,MAAQ7H,KAAKH,MAAM8J,KAAO,KAC1Be,YAAa,EAAGD,YAAa,QAC7BE,gBAAiB,QACjBI,SAAU,WACVC,gBAAiB,WACjBC,UAAW,SAAWC,OAAOd,GAAS,IACtCe,IAAK,EACLC,KAAM,K,4BAMPC,GAIH,OAFAjK,QAAQC,IAAIrB,KAAKH,OACjBuB,QAAQC,IAAIgK,GACQ,aAAhBA,EAAQ9M,MAAoD,GAA7B8M,EAAQ7G,MAAMkG,YAEtC,CACH7C,MAAQwD,EAAQ7G,MAAMqD,MACtB0C,OAASc,EAAQ7G,MAAM+F,OACvBQ,SAAU,WACVK,KAAOC,EAAQ7G,MAAM8G,KACrBH,IAAME,EAAQ7G,MAAM+G,KACpBxC,SAAWsC,EAAQ7G,MAAMuE,SACzByB,MAAOa,EAAQ7G,MAAMgH,UACrBhE,OAAQ,UACRmD,gBAAkBU,EAAQ7G,MAAMmG,gBAChCF,YAAcY,EAAQ7G,MAAMiG,YAC5BgB,aAAeJ,EAAQ7G,MAAMiH,aAC7BC,OAAS,GAIX,CACF7D,MAAQwD,EAAQ7G,MAAMqD,MACtB0C,OAASc,EAAQ7G,MAAM+F,OACvBQ,SAAU,WACVK,KAAOC,EAAQ7G,MAAM8G,KACrBH,IAAME,EAAQ7G,MAAM+G,KACpBxC,SAAWsC,EAAQ7G,MAAMuE,SACzByB,MAAOa,EAAQ7G,MAAMgH,UACrBhE,OAAQ,UACRmD,gBAAkBU,EAAQ7G,MAAMmG,gBAChCF,YAAcY,EAAQ7G,MAAMiG,YAC5BC,YAAaW,EAAQ7G,MAAMkG,YAC3BI,YAAc,QACdW,aAAeJ,EAAQ7G,MAAMiH,aAC7BC,OAAS,K,oCAKHL,GAIV,OAFAjK,QAAQC,IAAIrB,KAAKH,OACjBuB,QAAQC,IAAIgK,GACQ,aAAhBA,EAAQ9M,MAAoD,GAA7B8M,EAAQ7G,MAAMkG,YAEtC,CACH7C,MAAQwD,EAAQ7G,MAAMqD,MACtB0C,OAASc,EAAQ7G,MAAM+F,OACvBQ,SAAU,WACVhC,SAAWsC,EAAQ7G,MAAMuE,SACzByB,MAAOa,EAAQ7G,MAAMgH,UACrBhE,OAAQ,OACRmD,gBAAkBU,EAAQ7G,MAAMmG,gBAChCF,YAAcY,EAAQ7G,MAAMiG,YAC5BgB,aAAeJ,EAAQ7G,MAAMiH,cAG/B,CACF5D,MAAQwD,EAAQ7G,MAAMqD,MACtB0C,OAASc,EAAQ7G,MAAM+F,OACvBQ,SAAU,WACVhC,SAAWsC,EAAQ7G,MAAMuE,SACzByB,MAAOa,EAAQ7G,MAAMgH,UACrBhE,OAAQ,OACRmD,gBAAkBU,EAAQ7G,MAAMmG,gBAChCF,YAAcY,EAAQ7G,MAAMiG,YAC5BC,YAAaW,EAAQ7G,MAAMkG,YAC3BI,YAAc,QACdW,aAAeJ,EAAQ7G,MAAMiH,gB,qCAItBJ,GAIX,OAFAjK,QAAQC,IAAIrB,KAAKH,OACjBuB,QAAQC,IAAIgK,GACQ,aAAhBA,EAAQ9M,MAAoD,GAA7B8M,EAAQ7G,MAAMkG,YAEtC,CACH7C,MAAQwD,EAAQ7G,MAAMqD,MACtB0C,OAASc,EAAQ7G,MAAM+F,OACvBQ,SAAU,WACVhC,SAAWsC,EAAQ7G,MAAMuE,SACzByB,MAAOa,EAAQ7G,MAAMgH,UACrBhE,OAAQ,UACRmD,gBAAkBU,EAAQ7G,MAAMmG,gBAChCF,YAAcY,EAAQ7G,MAAMiG,YAC5BgB,aAAeJ,EAAQ7G,MAAMiH,aAC7BC,OAAQ,GAGV,CACF7D,MAAQwD,EAAQ7G,MAAMqD,MACtB0C,OAASc,EAAQ7G,MAAM+F,OACvBQ,SAAU,WACVhC,SAAWsC,EAAQ7G,MAAMuE,SACzByB,MAAOa,EAAQ7G,MAAMgH,UACrBhE,OAAQ,UACRsD,YAAc,QACdH,gBAAkBU,EAAQ7G,MAAMmG,gBAChCF,YAAcY,EAAQ7G,MAAMiG,YAC5BC,YAAa,EACbe,aAAeJ,EAAQ7G,MAAMiH,aAC7BC,OAAQ,K,+BAMN,IAAD,OACCtC,EAAepJ,KAAKH,MAAMuJ,aAChChI,QAAQC,IAAIrB,KAAKH,OACjB,IAAM8L,EAAO,yBAAK9D,MAAM,KAAK0C,OAAO,MAAM,0BAAM1C,MAAM,KAAK0C,OAAO,KAAK/F,MAAO,CAACoH,KAAK,cAAeC,YAAY,EAAGC,OAAQ,WAC1H,OAEI,yBAAK7L,UAAY,QAAQuE,MAAQxE,KAAK+L,YAAY/L,KAAKH,MAAMuK,OAAQjK,QAAUH,KAAKH,MAAMmM,UAElF5C,GAAgBA,EAAa/D,KAAI,SAACgG,EAAS5E,GAQvC,OALA4E,EAAQ/F,IAAMmB,EACdrF,QAAQC,IAAIgK,GACZjK,QAAQC,IAAI,EAAKxB,MAAMoM,gBAGH,WAAjBZ,EAAQ9M,MAAqB8M,GAAW,EAAKxL,MAAMoM,eAE1C,kBAAC,KAAD,CAERC,KAAM,CAAErE,MAAOwD,EAAQ7G,MAAMqD,MAAQ0C,OAAQc,EAAQ7G,MAAM+F,QAE3D4B,WAAY,SAAC3J,EAAG4J,GAAO,EAAKvM,MAAMwM,aAAahB,GAASjK,QAAQC,IAAI+K,EAAExG,EAAGwG,EAAEvG,GAAG,EAAKhG,MAAMyM,YAAYF,EAAExG,EAAEwG,EAAEvG,IAE3GkF,SAAU,CAAEnF,EAAGyF,EAAQ7G,MAAM8G,KAAMzF,EAAEwF,EAAQ7G,MAAM+G,MACnDnB,MAAO,EAAKvK,MAAMuK,MAClBmC,aAAc,SAAC/J,EAAGuF,EAAWyE,EAAKC,EAAO1B,GACrC,EAAKlL,MAAMwM,aAAahB,GACxB,EAAKxL,MAAM6M,aAAaF,EAAIhI,MAAMqD,MAAO2E,EAAIhI,MAAM+F,OAAOQ,IAG9DvG,MAAS,CAACqD,MAAOwD,EAAQ7G,MAAMqD,MAC3B0C,OAAQc,EAAQ7G,MAAM+F,OAKtBO,YAAc,QAEdL,YAAcY,EAAQ7G,MAAMiG,YAC5BgB,aAAeJ,EAAQ7G,MAAMiH,aAC7Bf,YAAaW,EAAQ7G,MAAMkG,YAC3BC,gBAAiBU,EAAQ7G,MAAMmG,gBAC/Be,OAAS,GAEbiB,sBAAyB,CAACC,SAAUjB,EAAMkB,QAASlB,EAAMmB,WAAYnB,EAAMoB,YAAapB,IAGxF,4BAAQnH,MAAO,CAAEqD,MAAOwD,EAAQ7G,MAAMqD,MACtB0C,OAAQc,EAAQ7G,MAAM+F,OACtBC,MAAOa,EAAQ7G,MAAMgH,UACrBzC,SAAWsC,EAAQ7G,MAAMuE,SAGzB2B,YAAaW,EAAQ7G,MAAMkG,YAC3BI,YAAc,QACdL,YAAcY,EAAQ7G,MAAMiG,YAE5BgB,aAAeJ,EAAQ7G,MAAMiH,aAC7Bd,gBAAiBU,EAAQ7G,MAAMmG,gBAC/BnD,OAAS,OACTkE,OAAS,GACRvL,QAAS,SAACwE,GAAWA,EAAMsD,kBAAkB,EAAKpI,MAAMwM,aAAahB,KAAcA,EAAQ1I,QAS5F,UAAjB0I,EAAQ9M,MAAoB8M,GAAW,EAAKxL,MAAMoM,eAEzC,kBAAC,KAAD,CAERC,KAAM,CAAErE,MAAOwD,EAAQ7G,MAAMqD,MAAQ0C,OAAQc,EAAQ7G,MAAM+F,QAC3DQ,SAAU,CAAEnF,EAAGyF,EAAQ7G,MAAM8G,KAAMzF,EAAEwF,EAAQ7G,MAAM+G,MACnDY,WAAY,SAAC3J,EAAG4J,GAAO,EAAKvM,MAAMwM,aAAahB,GAAS,EAAKxL,MAAMyM,YAAYF,EAAExG,EAAEwG,EAAEvG,IACrFuE,MAAO,EAAKvK,MAAMuK,MAClBmC,aAAc,SAAC/J,EAAGuF,EAAWyE,EAAKC,EAAO1B,GACrC,EAAKlL,MAAMwM,aAAahB,GACxB,EAAKxL,MAAM6M,aAAaF,EAAIhI,MAAMqD,MAAO2E,EAAIhI,MAAM+F,OAAOQ,IAG9DvG,MAAS,CAACqD,MAAOwD,EAAQ7G,MAAMqD,MACrB0C,OAAQc,EAAQ7G,MAAM+F,OACtBO,YAAc,QACdL,YAAcY,EAAQ7G,MAAMiG,YAC5BgB,aAAeJ,EAAQ7G,MAAMiH,aAC7Bf,YAAaW,EAAQ7G,MAAMkG,YAC3BC,gBAAiBU,EAAQ7G,MAAMmG,gBAC/Be,OAAS,GAEnBiB,sBAAyB,CAACC,SAAUjB,EAAMkB,QAASlB,EAAMmB,WAAYnB,EAAMoB,YAAapB,IAGxF,2BAAOnH,MAAO,CACEgG,MAAOa,EAAQ7G,MAAMgH,UACrBzC,SAAWsC,EAAQ7G,MAAMuE,SACzBvB,OAAS,QACRrH,QAAS,SAACwE,GAAWA,EAAMsD,kBAAkB,EAAKpI,MAAMwM,aAAahB,KAAcA,EAAQ1I,QAS5F,cAAjB0I,EAAQ9M,MAAwB8M,GAAW,EAAKxL,MAAMoM,eAE7C,kBAAC,KAAD,CACR7B,MAAO,EAAKvK,MAAMuK,MAClB8B,KAAM,CAAErE,MAAOwD,EAAQ7G,MAAMqD,MAAQ0C,OAAQc,EAAQ7G,MAAM+F,QAC3DQ,SAAU,CAAEnF,EAAGyF,EAAQ7G,MAAM8G,KAAMzF,EAAEwF,EAAQ7G,MAAM+G,MACnDY,WAAY,SAAC3J,EAAG4J,GAAO,EAAKvM,MAAMwM,aAAahB,GAAS,EAAKxL,MAAMyM,YAAYF,EAAExG,EAAEwG,EAAEvG,IAErF0G,aAAc,SAAC/J,EAAGuF,EAAWyE,EAAKC,EAAO1B,GACrC,EAAKlL,MAAMwM,aAAahB,GACxB,EAAKxL,MAAM6M,aAAaF,EAAIhI,MAAMqD,MAAO2E,EAAIhI,MAAM+F,OAAOQ,IAG9DvG,MAAS,CAACqD,MAAOwD,EAAQ7G,MAAMqD,MACrB0C,OAAQc,EAAQ7G,MAAM+F,OACtBO,YAAc,QACdL,YAAcY,EAAQ7G,MAAMiG,YAC5BgB,aAAeJ,EAAQ7G,MAAMiH,aAC7Bf,YAAaW,EAAQ7G,MAAMkG,aAGrCiC,sBAAyB,CAACC,SAAUjB,EAAMkB,QAASlB,EAAMmB,WAAYnB,EAAMoB,YAAapB,IAGxF,yBAAKnH,MAAS,CAACqD,MAAOwD,EAAQ7G,MAAMqD,MAC1B0C,OAAQc,EAAQ7G,MAAM+F,QACrBpK,QAAS,SAACwE,GAAWA,EAAMsD,kBAAkB,EAAKpI,MAAMwM,aAAahB,KAAa,iCAG7E,cAAjBA,EAAQ9M,MAAwB8M,GAAW,EAAKxL,MAAMoM,eAE7C,kBAAC,KAAD,CAERC,KAAM,CAAErE,MAAOwD,EAAQ7G,MAAMqD,MAAQ0C,OAAQc,EAAQ7G,MAAM+F,QAC3DQ,SAAU,CAAEnF,EAAGyF,EAAQ7G,MAAM8G,KAAMzF,EAAEwF,EAAQ7G,MAAM+G,MACnDY,WAAY,SAAC3J,EAAG4J,GAAO,EAAKvM,MAAMwM,aAAahB,GAAS,EAAKxL,MAAMyM,YAAYF,EAAExG,EAAEwG,EAAEvG,IACrFuE,MAAO,EAAKvK,MAAMuK,MAClBmC,aAAc,SAAC/J,EAAGuF,EAAWyE,EAAKC,EAAO1B,GACrC,EAAKlL,MAAMwM,aAAahB,GACxB,EAAKxL,MAAM6M,aAAaF,EAAIhI,MAAMqD,MAAO2E,EAAIhI,MAAM+F,OAAOQ,IAG9DvG,MAAS,EAAKwI,eAAe3B,GAE7BsB,sBAAyB,CAACC,SAAUjB,EAAMkB,QAASlB,EAAMmB,WAAYnB,EAAMoB,YAAapB,IAGxF,2BAAOpN,KAAK,OAAOiG,MAAO,EAAKyI,cAAc5B,GAAU1I,MAAO0I,EAAQ1I,MAAQxC,QAAS,SAACwE,GAAWA,EAAMsD,kBAAkB,EAAKpI,MAAMwM,aAAahB,OAGlI,WAAjBA,EAAQ9M,KACD,4BAAQiG,MAAS,EAAKA,MAAM6G,GAAUlL,QAAS,SAACwE,GAAWA,EAAMsD,kBAAkB,EAAKpI,MAAMwM,aAAahB,KAAcA,EAAQ1I,OAExH,cAAjB0I,EAAQ9M,KACA,2BAAOA,KAAK,OAAOiG,MAAO,EAAKA,MAAM6G,GAAW1I,MAAQ0I,EAAQ1I,MAAQxC,QAAS,SAACwE,GAAWA,EAAMsD,kBAAkB,EAAKpI,MAAMwM,aAAahB,MAGnI,UAAjBA,EAAQ9M,KACD,2BAAOiG,MAAS,EAAKA,MAAM6G,GAAUlL,QAAS,SAACwE,GAAWA,EAAMsD,kBAAkB,EAAKpI,MAAMwM,aAAahB,KAAcA,EAAQ1I,QAEvI0I,EAAQ9M,KAAO,aACR,yBAAKiG,MAAS,CAACqD,MAAOwD,EAAQ7G,MAAMqD,MACvC0C,OAAQc,EAAQ7G,MAAM+F,OACtBO,YAAc,QACdL,YAAcY,EAAQ7G,MAAMiG,YAC5BgB,aAAeJ,EAAQ7G,MAAMiH,aAC7Bf,YAAaW,EAAQ7G,MAAMkG,YAC3BK,SAAU,WACVK,KAAOC,EAAQ7G,MAAM8G,KACrBH,IAAME,EAAQ7G,MAAM+G,KACpBK,KAAK,cACLpE,OAAQ,WACRrH,QAAS,SAACwE,GAAWA,EAAMsD,kBAAkB,EAAKpI,MAAMwM,aAAahB,KACrE,qCAbR,U,GAhTFhL,IAAMC,Y,UC8Kb4M,G,2MA9KXC,eAAiB,WAEb,GAAsC,aAAlC,EAAKtN,MAAMoM,eAAe1N,KAC9B,CACI,IAAImM,EAAc0C,SAASC,eAAe,eAAe1K,MACrD8I,EAAe2B,SAASC,eAAe,gBAAgB1K,MACvD8H,EAAc2C,SAASC,eAAe,eAAe1K,MACzD,EAAK9C,MAAMyN,yBAAyB5C,EAAae,EAAchB,OAGnE,CACI,IAAI8C,EAAWH,SAASC,eAAe,YAAY1K,MAC/CoG,EAAWqE,SAASC,eAAe,YAAY1K,MAC/C6I,EAAY4B,SAASC,eAAe,aAAa1K,MAIjD6K,GAHA9C,EAAc0C,SAASC,eAAe,eAAe1K,MACrD8I,EAAe2B,SAASC,eAAe,gBAAgB1K,MACvD8H,EAAc2C,SAASC,eAAe,eAAe1K,MACnCyK,SAASC,eAAe,mBAAmB1K,OACjE,EAAK9C,MAAMsN,eAAeI,EAASxE,EAAUyC,EAAUd,EAAYe,EAAahB,EAAa+C,K,wEAqC3F,IAAD,OAIL,OAFApM,QAAQC,IAAIrB,KAAKH,MAAMoM,gBAGnB,6BACI,yBAAKhM,UAAU,+BACX,4CAAkBD,KAAKH,MAAMoM,eAAe1N,MAEN,aAAlCyB,KAAKH,MAAMoM,eAAe1N,KAC3B,KACC,yBAAK0B,UAAU,eACf,2BAAOA,UAAU,UAAjB,YACA,2BAAOA,UAAU,SAASgC,GAAK,WAAW1D,KAAK,OAAOoE,MAAS3C,KAAKH,MAAMoM,eAAetJ,MAAOQ,SAAWnD,KAAKmN,kBAKjF,aAAlCnN,KAAKH,MAAMoM,eAAe1N,KACxB,KACH,yBAAK0B,UAAU,eACX,2BAAOA,UAAU,SAASgD,QAAQ,SAAlC,aACA,2BAAOhD,UAAU,SAASgC,GAAK,WAAW1D,KAAK,OAAOoE,MAAS3C,KAAKH,MAAMoM,eAAezH,MAAMuE,SAAU5F,SAAWnD,KAAKmN,kBAK1F,aAAlCnN,KAAKH,MAAMoM,eAAe1N,KACxB,KACH,yBAAK0B,UAAU,eACX,2BAAOA,UAAU,SAASgD,QAAQ,SAAlC,cACA,2BAAOhB,GAAG,YAAYhC,UAAU,SAAS1B,KAAK,OAAOoE,MAAS3C,KAAKH,MAAMoM,eAAezH,MAAMgH,UAAWrL,QAAWH,KAAKH,MAAM4N,gBAG3HzN,KAAKH,MAAM6N,mBACX,kBAAC,gBAAD,CACAlD,MAAQxK,KAAKH,MAAMoM,eAAezH,MAAMgH,UACxCmC,iBAAmB,SAACnD,GAAW4C,SAASC,eAAe,aAAa1K,MAAQ6H,EAAMoD,IAClF,EAAK/N,MAAMsN,eAAeC,SAASC,eAAe,YAAY1K,MACpCyK,SAASC,eAAe,YAAY1K,MACpCyK,SAASC,eAAe,aAAa1K,MACrCyK,SAASC,eAAe,eAAe1K,MACvCyK,SAASC,eAAe,gBAAgB1K,MACxCyK,SAASC,eAAe,eAAe1K,MACvCyK,SAASC,eAAe,mBAAmB1K,WAO1C,aAAlC3C,KAAKH,MAAMoM,eAAe1N,KACxB,KACH,yBAAK0B,UAAU,eACX,2BAAOA,UAAU,SAASgD,QAAQ,SAAlC,oBACA,2BAAOhD,UAAU,SAASgC,GAAK,kBAAmBU,MAAS3C,KAAKH,MAAMoM,eAAezH,MAAMmG,gBAAiBpM,KAAK,OAAO4B,QAAWH,KAAKH,MAAMgO,sBAG1I7N,KAAKH,MAAMiO,yBACX,kBAAC,gBAAD,CACAtD,MAAQxK,KAAKH,MAAMoM,eAAezH,MAAMmG,gBACxCgD,iBAAmB,SAACnD,GAAW4C,SAASC,eAAe,mBAAmB1K,MAAQ6H,EAAMoD,IACxF,EAAK/N,MAAMsN,eAAeC,SAASC,eAAe,YAAY1K,MACpCyK,SAASC,eAAe,YAAY1K,MACpCyK,SAASC,eAAe,aAAa1K,MACrCyK,SAASC,eAAe,eAAe1K,MACvCyK,SAASC,eAAe,gBAAgB1K,MACxCyK,SAASC,eAAe,eAAe1K,MACvCyK,SAASC,eAAe,mBAAmB1K,WAM7E,yBAAK1C,UAAU,eACX,2BAAOA,UAAU,SAASgD,QAAQ,SAAlC,gBACA,2BAAOhD,UAAU,SAASgC,GAAK,cAAcU,MAAS3C,KAAKH,MAAMoM,eAAezH,MAAMiG,YAAYlM,KAAK,OAAO4B,QAAWH,KAAKH,MAAMkO,kBAGhI/N,KAAKH,MAAMmO,qBACX,kBAAC,gBAAD,CACAxD,MAAQxK,KAAKH,MAAMoM,eAAezH,MAAMiG,YACxCkD,iBAAmB,SAACnD,GAAW4C,SAASC,eAAe,eAAe1K,MAAQ6H,EAAMoD,IAC9C,aAAlC,EAAK/N,MAAMoM,eAAe1N,KAC9B,EAAKsB,MAAMsN,eAAeC,SAASC,eAAe,YAAY1K,MACpCyK,SAASC,eAAe,YAAY1K,MACpCyK,SAASC,eAAe,aAAa1K,MACrCyK,SAASC,eAAe,eAAe1K,MACvCyK,SAASC,eAAe,gBAAgB1K,MACxCyK,SAASC,eAAe,eAAe1K,MACvCyK,SAASC,eAAe,mBAAmB1K,OAIjE,EAAK9C,MAAMyN,yBAAyBF,SAASC,eAAe,eAAe1K,MACvCyK,SAASC,eAAe,gBAAgB1K,MACxCyK,SAASC,eAAe,eAAe1K,WAOvF,yBAAK1C,UAAU,eACX,2BAAOA,UAAU,SAASgD,QAAQ,SAAlC,oBACA,2BAAOhD,UAAU,SAASgC,GAAK,cAAcU,MAAS3C,KAAKH,MAAMoM,eAAezH,MAAMkG,YAAanM,KAAK,OAAO4E,SAAWnD,KAAKmN,kBAGnI,yBAAKlN,UAAU,eACX,2BAAOA,UAAU,SAASgD,QAAQ,SAAlC,iBACA,2BAAOhD,UAAU,SAASgC,GAAK,eAAeU,MAAS3C,KAAKH,MAAMoM,eAAezH,MAAMiH,aAAalN,KAAK,OAAO4E,SAAWnD,KAAKmN,wB,GAvKjI9M,IAAMC,WC6Cd2N,G,2MA7CXpP,MAAO,CACHgJ,MAAQ,KACR0C,OAAS,M,wEAiBT,OALuB,GAAnBvK,KAAKH,MAAM8J,MAAiC,MAApB3J,KAAKnB,MAAMgJ,OAEnC7H,KAAK0C,SAAS,CAACmF,MAAO7H,KAAKH,MAAM8J,KACjBY,OAASvK,KAAKH,MAAM+J,OAGpC,6BACI,yBAAK3J,UAAU,+BAEX,0BAAM+C,SAAUhD,KAAKH,MAAMqO,gBAC3B,mDACA,6BACA,yBAAKjO,UAAU,eACX,2BAAOA,UAAU,UAAjB,SACA,2BAAOA,UAAU,SAASiD,KAAK,OAAOjB,GAAK,OAAO1D,KAAK,SAAS4P,IAAI,IAAIC,IAAI,OAAOC,aAAgBrO,KAAKnB,MAAMgJ,MAAO1E,SAAYnD,KAAKH,MAAMyO,gBAGhJ,yBAAKrO,UAAU,eACX,2BAAOA,UAAU,UAAjB,UACA,2BAAOA,UAAU,SAASiD,KAAK,OAAOjB,GAAK,OAAO1D,KAAK,SAAS4P,IAAI,IAAIC,IAAI,OAAOC,aAAgBrO,KAAKnB,MAAM0L,OAAQpH,SAAYnD,KAAKH,MAAMyO,gBAEjJ,4BAAQ/J,MAAM,mCAAmChG,KAAK,SAAS2E,KAAK,SAAS4G,SAAY9J,KAAKH,MAAM0O,eAApG,iB,GArCIlO,IAAMC,WCgBxBkO,I,mNAKFjM,aAAe,SAACC,GACMY,yBACRG,WAAW,eAChBC,IAAI,EAAK3D,MAAM6J,WAAWzH,IAC1B8C,OAAO,CACJ7B,KAAMkK,SAASC,eAAe,QAAQ1K,S,EA8DlD9D,MAAQ,CACJuK,aAAe,GACf6C,eAAiB,KACjBtC,KAAO,EACPC,KAAO,EAEP6D,eAAc,EACdM,iBAAiB,EACjBF,qBAAqB,EAErBzD,MAAO,EAEPD,YAAa,EACbJ,cAAe,EACfE,eAAe,EAEfsE,eAAgB,G,EAepBE,YAAc,SAAC9J,GACX,GAAsB,KAAlBA,EAAM+J,QAE0B,MAA7B,EAAK7P,MAAMoN,kBAEN7C,EAAezC,KAAKC,MAAMD,KAAKE,UAAU,EAAKhI,MAAMuK,gBAC3ChC,OAAO,EAAKvI,MAAMoN,eAAe3G,IAAI,GAClD,EAAK5C,SAAS,CAACuJ,eAAgB,KACnB7C,aAAcA,EACde,YAAY,UAG3B,GAAsB,KAAlBxF,EAAM+J,SAAkB/J,EAAMgK,SACH,MAA7B,EAAK9P,MAAMoN,eACd,CACI,IAAI7C,EAAezC,KAAKC,MAAMD,KAAKE,UAAU,EAAKhI,MAAMuK,eACpDwF,EAAcjI,KAAKC,MAAMD,KAAKE,UAAU,EAAKhI,MAAMoN,iBAEnDpE,EAAQ,EAAKhJ,MAAMoN,eAAezH,MAAMqD,MACxC0C,EAAS,EAAK1L,MAAMoN,eAAezH,MAAM+F,OAExB,kBAAV1C,IAEPA,EAAQgH,OAAO,EAAKhQ,MAAMoN,eAAezH,MAAMqD,MAAMiH,MAAM,GAAG,KAE5C,kBAAXvE,IAEPA,EAASsE,OAAO,EAAKhQ,MAAMoN,eAAezH,MAAM+F,OAAOuE,MAAM,GAAG,KAKhEF,EAAYpK,MAAM8G,KAAO,IAAMzD,EAAO,EAAKhJ,MAAM8K,KAEjDiF,EAAYpK,MAAM8G,KAAO,EAAKzM,MAAM8K,KAAO9B,EAI3C+G,EAAYpK,MAAM8G,MAAQ,IAE1BsD,EAAYpK,MAAM+G,KAAO,IAAMhB,EAAS,EAAK1L,MAAM+K,KAEnDgF,EAAYpK,MAAM+G,KAAO,EAAK1M,MAAM+K,KAAOW,EAI3CqE,EAAYpK,MAAM+G,MAAQ,IAM9BnC,EAAa7H,KAAKqN,GAClB,EAAKlM,SAAS,CAACuJ,eAAgB2C,EAC3BxF,aAAcA,EACde,YAAY,M,8EA/DxBnK,KAAK0C,SAAS,CAAC6L,eAAgB,M,oCAK/BvO,KAAK0C,SAAS,CAACyH,YAAa,M,0CAgEzBnK,KAAKH,MAAM6J,YACV1J,KAAK0C,SAAS,CAAC0G,aAAcpJ,KAAKH,MAAM6J,WAAWxD,KACnCyD,KAAO3J,KAAKH,MAAM6J,WAAWC,KAC7BC,KAAO5J,KAAKH,MAAM6J,WAAWE,OAC7CwD,SAAS2B,iBAAiB,UAAW/O,KAAKyO,aAAa,K,yCAG5CO,GACf5N,QAAQC,IAAI2N,GACZ5N,QAAQC,IAAIrB,KAAKH,MAAM6J,YACnBsF,EAAUtF,YAAuC,MAAzB1J,KAAKH,MAAM6J,YACnC1J,KAAK0C,SAAS,CAAC0G,aAAcpJ,KAAKH,MAAM6J,WAAWxD,KACvCyD,KAAO3J,KAAKH,MAAM6J,WAAWC,KAC7BC,KAAO5J,KAAKH,MAAM6J,WAAWE,OACzCwD,SAAS2B,iBAAiB,UAAW/O,KAAKyO,aAAa,K,kCAInDpD,GAERrL,KAAK0C,SAAS,CAAC0G,aAAciC,EACzBlB,YAAY,M,qCAGLxF,GAEXA,EAAM9B,iBAEN,IAAIgF,EAAQlD,EAAMlC,OAAOwM,KAAKtM,MAC1B4H,EAAS5F,EAAMlC,OAAOyM,KAAKvM,MAC3ByG,EAAezC,KAAKC,MAAMD,KAAKE,UAAU7G,KAAKnB,MAAMuK,eAExDA,EAAa+F,SAAQ,SAAAC,GAEjB,IAAIC,EAAWD,EAAQ5K,MAAMqD,MACzByH,EAAYF,EAAQ5K,MAAM+F,OAEN,kBAAb8E,IAEPA,EAAWR,OAAOO,EAAQ5K,MAAMqD,MAAMiH,MAAM,GAAG,KAE1B,kBAAdQ,IAEPA,EAAYT,OAAOO,EAAQ5K,MAAM+F,OAAOuE,MAAM,GAAG,KAElDO,EAAWD,EAAQ5K,MAAM8G,KAAOzD,IAE/BuH,EAAQ5K,MAAM8G,KAAO,GAEtBgE,EAAYF,EAAQ5K,MAAM+G,KAAOhB,IAEhC6E,EAAQ5K,MAAM+G,KAAM,MAO5BvL,KAAK0C,SAAS,CAACiH,KAAOhF,EAAMlC,OAAOwM,KAAKtM,MACzBiH,KAAOjF,EAAMlC,OAAOyM,KAAKvM,MACzBwH,YAAY,EACZoE,eAAgB,EAChBnF,aAAcA,IAG7BhI,QAAQC,IAAIrB,KAAKnB,S,qCAKjB,IAAM0Q,EAA6B,EAAlBvP,KAAKnB,MAAMuL,MACL,GAApBpK,KAAKnB,MAAMuL,OAAqC,IAApBpK,KAAKnB,MAAMuL,OAEtCpK,KAAK0C,SAAS,CAAC0H,MAAOmF,IAE1BvP,KAAKwP,WAAWD,K,sCAOhB,IAAMA,EAAWvP,KAAKnB,MAAMuL,MAAO,EACZ,GAApBpK,KAAKnB,MAAMuL,OAAqC,GAApBpK,KAAKnB,MAAMuL,OAEtCpK,KAAK0C,SAAS,CAAC0H,MAAOmF,IAE1BvP,KAAKwP,WAAWD,K,iCAGRA,GACQ,IAAZA,EACAvP,KAAK0C,SAAS,CAACuH,eAAe,EACdF,cAAc,IAEb,GAAZwF,EACLvP,KAAK0C,SAAS,CAACuH,eAAe,EACdF,cAAc,IAEb,GAAZwF,GACLvP,KAAK0C,SAAS,CAACuH,eAAe,EACdF,cAAc,M,iCAKlC/J,KAAK0C,SAAS,CAACuJ,eAAiB,KACjBwB,eAAgB,EAChBI,qBAAqB,EACrBE,iBAAiB,IAChC3M,QAAQC,IAAIrB,KAAKnB,MAAMoN,kB,mCAGdZ,GAETrL,KAAK0C,SAAS,CAACuJ,eAAgBZ,EACvBoC,eAAgB,EAChBI,qBAAqB,EACrBE,iBAAiB,IACzB/N,KAAKyP,cACLrO,QAAQC,IAAIrB,KAAKnB,MAAMoN,kB,kCAGfrG,EAAEC,GAEVzE,QAAQC,IAAIuE,EAAEC,GAEdzE,QAAQC,IAAIrB,KAAKnB,MAAM8K,MACvB,IAAI0B,EAAU1E,KAAKC,MAAMD,KAAKE,UAAU7G,KAAKnB,MAAMoN,iBAC/C7C,EAAezC,KAAKC,MAAMD,KAAKE,UAAU7G,KAAKnB,MAAMuK,eACpDvB,EAAQ7H,KAAKnB,MAAMoN,eAAezH,MAAMqD,MACxC0C,EAASvK,KAAKnB,MAAMoN,eAAezH,MAAM+F,OAC7CnJ,QAAQC,IAAIuE,EAAEC,EAAEgC,EAAM0C,GAED,kBAAV1C,IAEPA,EAAQgH,OAAOhH,EAAMiH,MAAM,GAAG,KAEZ,kBAAXvE,IAEPA,EAASsE,OAAOtE,EAAOuE,MAAM,GAAG,KAMhClJ,EAAIiC,EAAQ7H,KAAKnB,MAAM8K,KAEvB/D,EAAI5F,KAAKnB,MAAM8K,KAAO9B,EAEjBjC,EAAI,IAETA,EAAI,GAEJC,EAAI0E,EAASvK,KAAKnB,MAAM+K,KAExB/D,EAAI7F,KAAKnB,MAAM+K,KAAOW,EAEjB1E,EAAI,IAETA,EAAI,GAERwF,EAAQ7G,MAAM8G,KAAO1F,EACrByF,EAAQ7G,MAAM+G,KAAO1F,EAGrBuD,EAAaiC,EAAQ/F,KAAO+F,EAC5BrL,KAAK0C,SAAS,CAACuJ,eAAgBZ,EACfjC,aAAcA,EACde,YAAY,M,mCAGnBtC,EAAO0C,EAAQQ,GAExB,GAAkB,GAAdA,EAASnF,GAAwB,GAAdmF,EAASlF,EAAhC,CAIAzE,QAAQC,IAAIwG,EAAM0C,EAAQQ,GAC1B,IAAIM,EAAU1E,KAAKC,MAAMD,KAAKE,UAAU7G,KAAKnB,MAAMoN,iBAC/C7C,EAAezC,KAAKC,MAAMD,KAAKE,UAAU7G,KAAKnB,MAAMuK,eACnC,kBAAVvB,IAEPA,EAAQgH,OAAOhH,EAAMiH,MAAM,GAAG,KAEZ,kBAAXvE,IAEPA,EAASsE,OAAOtE,EAAOuE,MAAM,GAAG,KAGhC/D,EAASnF,EAAIiC,EAAQ7H,KAAKnB,MAAM8K,OAEhC9B,GAAiBA,EAAQkD,EAASnF,EAAI5F,KAAKnB,MAAM8K,MAEjDoB,EAASlF,EAAI0E,EAASvK,KAAKnB,MAAM+K,OAEjCW,GAAmBA,EAASQ,EAASlF,EAAI7F,KAAKnB,MAAM+K,MAEpDmB,EAASnF,EAAI,EAEbyF,EAAQ7G,MAAM8G,KAAO,EAIrBD,EAAQ7G,MAAM8G,KAAOP,EAASnF,EAE9BmF,EAASlF,EAAI,EAEbwF,EAAQ7G,MAAM+G,KAAO,EAIrBF,EAAQ7G,MAAM+G,KAAOR,EAASlF,EAElCwF,EAAQ7G,MAAMqD,MAAQA,EACtBwD,EAAQ7G,MAAM+F,OAASA,EACvBnB,EAAaiC,EAAQ/F,KAAO+F,EAC5BrL,KAAK0C,SAAS,CAACuJ,eAAgBZ,EACfjC,aAAcA,EACde,YAAY,O,qCAGjBoD,EAASxE,EAAUyC,EAAWd,EAAae,EAAahB,EAAY+C,GAE/EpM,QAAQC,IAAIkM,EAAUxE,EAAUyC,EAAWd,EAAae,EAAahB,GAGrE,IAAIY,EAAU1E,KAAKC,MAAMD,KAAKE,UAAU7G,KAAKnB,MAAMoN,iBAC/C7C,EAAezC,KAAKC,MAAMD,KAAKE,UAAU7G,KAAKnB,MAAMuK,eACxDiC,EAAQ1I,MAAQ4K,EAChBlC,EAAQ7G,MAAMuE,SAAW8F,OAAO9F,GAChCsC,EAAQ7G,MAAMgH,UAAYA,EAC1BH,EAAQ7G,MAAMkG,YAAcmE,OAAOnE,GACnCW,EAAQ7G,MAAMiH,aAAeoD,OAAOpD,GACpCJ,EAAQ7G,MAAMiG,YAAcA,EAC5BY,EAAQ7G,MAAMmG,gBAAkB6C,EAChCpE,EAAaiC,EAAQ/F,KAAO+F,EAC5BrL,KAAK0C,SAAS,CAACuJ,eAAgBZ,EAChBjC,aAAcA,EACde,YAAY,IAE3B/I,QAAQC,IAAIrB,KAAKnB,MAAMoN,kB,+CAGFvB,EAAae,EAAchB,GAEhDrJ,QAAQC,IAAIqJ,EAAae,GAGzB,IAAIJ,EAAU1E,KAAKC,MAAMD,KAAKE,UAAU7G,KAAKnB,MAAMoN,iBAC/C7C,EAAezC,KAAKC,MAAMD,KAAKE,UAAU7G,KAAKnB,MAAMuK,eACxDiC,EAAQ7G,MAAMkG,YAAcmE,OAAOnE,GACnCW,EAAQ7G,MAAMiH,aAAeoD,OAAOpD,GACpCJ,EAAQ7G,MAAMiG,YAAcA,EAC5BrB,EAAaiC,EAAQ/F,KAAO+F,EAC5BrL,KAAK0C,SAAS,CAACuJ,eAAgBZ,EAChBjC,aAAcA,EACde,YAAY,IAG3B/I,QAAQC,IAAIrB,KAAKnB,MAAMoN,kB,sCAKvBjM,KAAK0C,SAAS,CAAC+K,eAAiBzN,KAAKnB,MAAM4O,kB,wCAK3CzN,KAAK0C,SAAS,CAACqL,iBAAmB/N,KAAKnB,MAAMkP,oB,4CAK7C/N,KAAK0C,SAAS,CAACmL,qBAAuB7N,KAAKnB,MAAMgP,wB,+BAMjD,IAAMvO,EAAOU,KAAKH,MAAMP,KAClBoK,EAAa1J,KAAKH,MAAM6J,WAG9B,OAFAtI,QAAQC,IAAIrB,KAAKH,OACjBuB,QAAQC,IAAIrB,KAAKnB,MAAMuK,cAClB9J,EAAKmC,IAKLiI,EAID,yBAAKnF,OAAK,GACN,yBAAKtE,UAAU,8BAA8BgC,GAAK,WAG9C,yBAAKhC,UAAU,eACX,2BAAOA,UAAU,SAASgD,QAAQ,SAAlC,QACA,2BAAOhD,UAAU,SAAS1B,KAAK,OAAO2E,KAAK,OAAOjB,GAAG,OAAOkB,SAAUnD,KAAKuC,aAAc8L,aAAc3E,EAAWxG,QAGtH,yBAAKjB,GAAK,QACN,kBAAC,GAAD,CACIyH,WAAc1J,KAAKH,MAAM6J,WACzBN,aAAgBpJ,KAAKnB,MAAMuK,aAC3BC,YAAarJ,KAAKqJ,YAAYqG,KAAK1P,MACnC2J,KAAQ3J,KAAKnB,MAAM8K,KACnBC,KAAQ5J,KAAKnB,MAAM+K,KACnBI,aAAgBhK,KAAKgK,aAAa0F,KAAK1P,MACvCkK,cAAiBlK,KAAKkK,cAAcwF,KAAK1P,MACzCmK,WAAcnK,KAAKnB,MAAMsL,WACzBC,MAASpK,KAAKnB,MAAMuL,MACpBL,aAAgB/J,KAAKnB,MAAMkL,aAC3BE,cAAiBjK,KAAKnB,MAAMoL,cAC5BJ,YAAe7J,KAAK6J,YAAY6F,KAAK1P,SAI7C,yBAAKiC,GAAK,MAAOhC,UAAU,+BAC3B,kBAAC,GAAD,CAASyJ,WAAc1J,KAAKH,MAAM6J,WACzBN,aAAgBpJ,KAAKnB,MAAMuK,aAC3B6C,eAAkBjM,KAAKnB,MAAMoN,eAC7BI,aAAgBrM,KAAKqM,aAAaqD,KAAK1P,MAAOgM,SAAYhM,KAAKgM,SAAS0D,KAAK1P,MAC7E2J,KAAQ3J,KAAKnB,MAAM8K,KACnBC,KAAQ5J,KAAKnB,MAAM+K,KACnB0C,YAAetM,KAAKsM,YAAYoD,KAAK1P,MACrC0M,aAAgB1M,KAAK0M,aAAagD,KAAK1P,MACvCoK,MAASpK,KAAKnB,MAAMuL,SAI7B,yBAAKnI,GAAI,SAEDjC,KAAKnB,MAAMoN,eACX,kBAAC,GAAD,CACIA,eAAkBjM,KAAKnB,MAAMoN,eAC7BkB,eAAkBnN,KAAKmN,eAAeuC,KAAK1P,MAC3C0N,kBAAqB1N,KAAKnB,MAAM4O,cAChCA,cAAiBzN,KAAKyN,cAAciC,KAAK1P,MACzCgO,oBAAuBhO,KAAKnB,MAAMkP,gBAClCA,gBAAmB/N,KAAK+N,gBAAgB2B,KAAK1P,MAC7C8N,wBAA2B9N,KAAKnB,MAAMgP,oBACtCA,oBAAuB7N,KAAK6N,oBAAoB6B,KAAK1P,MACrDsN,yBAA4BtN,KAAKsN,yBAAyBoC,KAAK1P,QAEjE,kBAAC,GAAD,CAAW0J,WAAc1J,KAAKH,MAAM6J,WAAYwE,eAAkBlO,KAAKkO,eAAewB,KAAK1P,MAC7FuO,cAAiBvO,KAAKnB,MAAM0P,cAC5BD,aAAgBtO,KAAKsO,aAAaoB,KAAK1P,MACvC2J,KAAQ3J,KAAKnB,MAAM8K,KACnBC,KAAQ5J,KAAKnB,MAAM+K,UA5D5B,kBAAC,IAAMhI,SAAP,MALA,kBAAC,IAAD,CAAU1B,GAAG,U,GAlcPI,cAojBVC,IAFeY,YAAWqN,IAE1BjO,YACXE,aAnBoB,SAAC5B,EAAOqK,GAAc,IAClCjH,EAAOiH,EAASvL,MAAMgS,OAAtB1N,GACAqC,EAAgBzF,EAAMW,UAAUqJ,KAAhCvE,YACRlD,QAAQC,IAAIxC,EAAMW,WAClB,IAAMkK,EAAapF,EAAcA,EAAYrC,GAAM,KAMnD,OAJIyH,IACAA,EAAWzH,GAAKA,GAGb,CACHyH,aACApK,KAAMT,EAAMjB,SAAS0B,SAQzB8G,2BAAiB,CACb,CAAE7C,WAAY,iBAHPhD,CAKbiO,KCnkBIoB,G,2MAQF/Q,MAAQ,CACJgR,aAAc,I,oNAMCzC,SAAS0C,cAAc,UAGhC9J,EAAY5C,yB,EACIpD,KAAKH,MAAMlC,MAAMgS,OAA/B1N,E,EAAAA,GAAIwE,E,EAAAA,M,SACET,EAAUzC,WAAW,aAC9BC,IAAIvB,GAAI8N,M,OADTpK,E,OAEAkD,EAAOlD,EAAEkD,OACbzH,QAAQC,IAAIwH,GAIZuE,SAASC,eAAe,8BAA8B1K,MAAQkG,EAAK/B,MAAML,GAAOgB,YAChF2F,SAASC,eAAe,8BAA8B1K,MAAQkG,EAAK/B,MAAML,GAAOiB,YAChF0F,SAASC,eAAe,wBAAwB1K,MAAQkG,EAAK/B,MAAML,GAAOkB,SAEtEkB,EAAK/B,MAAML,GAAOmB,YAClBwF,SAASC,eAAe,kBAAkB2C,QAAU,WAKxDhQ,KAAK0C,SAAS,CAAEmN,aAAchH,EAAK/B,Q,uQAmBb9G,KAAKH,MAAMlC,MAAMgS,OAA/B1N,E,EAAAA,GAAIwE,E,EAAAA,MAERoC,EAAOlC,KAAKC,MAAMD,KAAKE,UAAU7G,KAAKnB,MAAMgR,eAChDzO,QAAQC,IAAIwH,GACZA,EAAKpC,GAAOiB,YAAc0F,SAASC,eAAe,8BAA8B1K,MAChFkG,EAAKpC,GAAOgB,YAAc2F,SAASC,eAAe,8BAA8B1K,MAChFkG,EAAKpC,GAAOkB,SAAWyF,SAASC,eAAe,wBAAwB1K,MAEnEyK,SAASC,eAAe,kBAAkB2C,QAC1CnH,EAAKpC,GAAOmB,WAAY,EAGxBiB,EAAKpC,GAAOmB,WAAY,EAG5BxG,QAAQC,IAAIwH,GAEN7C,EAAY5C,yB,UACZ4C,EAAUzC,WAAW,aACtBC,IAAIvB,GAEJ8C,OAAO,CACJ+B,MAAO+B,I,QAGf7I,KAAKH,MAAMyB,QAAQC,KAAK,aAAeU,G,sIAGjC,IAAD,EACiBjC,KAAKH,MAAMlC,MAAMgS,OAA/B1N,EADH,EACGA,GADH,EACOwE,MACZzG,KAAKH,MAAMyB,QAAQC,KAAK,aAAeU,K,+BAIjC,IAAD,OACL,OACI,yBAAKsC,MAAM,aACP,6BACA,yBAAKtC,GAAG,YAAYsC,MAAM,+BAYtB,yBAAKtC,GAAG,gBAAR,QACA,yBAAKA,GAAG,uBACJ,2BAAO2I,YAAY,cAAc3I,GAAG,6BAA6B1D,KAAK,OAAOgG,MAAM,aACnF,2BAAO0L,IAAI,eAAX,eACA,2BAAOrF,YAAY,YAAY3I,GAAG,6BAA6B1D,KAAK,OAAOgG,MAAM,aACjF,2BAAO0L,IAAI,aAAX,aACA,2BAAOrF,YAAY,WAAW3I,GAAG,uBAAuB1D,KAAK,OAAOgG,MAAM,aAC1E,2BAAO0L,IAAI,YAAX,YAEA,6BACA,6BACA,+BACI,2BAAO1R,KAAK,WAAW0D,GAAG,mBAC1B,2CAEJ,6BACA,6BACA,6BACI,4BAAQ9B,QAAS,kBAAM,EAAK4E,UAAUR,MAAM,+BAA+BhG,KAAK,SAAS2E,KAAK,UAA9F,SACJ,uBAAGqB,MAAM,wBAAT,SAEI,4BAAQpE,QAAS,kBAAM,EAAK+P,UAAU3L,MAAM,+BAA+BhG,KAAK,SAAS2E,KAAK,UAA9F,SACJ,uBAAGqB,MAAM,wBAAT,kB,GAhICjE,a,IAyIVa,YAAWyO,I,QC9IpBO,I,kNAKFC,YAAc,WACV,IAAMpK,EAAY5C,yBAClB4C,EAAUzC,WAAW,eAAewM,MAAMnP,MAAK,SAAUyP,GACrDA,EAAclB,SAAQ,SAAU3L,GAC5BpC,QAAQC,IAAI,YAAcmC,EAAIvB,IAC9B+D,EAAUzC,WAAW,eAAeC,IAAIA,EAAIvB,IAAIoC,gB,EAK5DiM,YAAc,WAMVlP,QAAQC,IAAI,EAAKxB,OAEjB,IAAMmG,EAAY5C,yBAED,EAAKvD,MAAdP,KAGR0G,EAAUzC,WAAW,SAASwM,MAAMnP,MAAK,SAAUyP,GAC/CA,EAAclB,SAAQ,SAAU3L,GAC5BpC,QAAQC,IAAI,YAAcmC,EAAIqF,OAAO1G,OAMrCoO,GAASjM,YAAY6K,SAAQ,SAAAqB,GACzBxK,EAAUzC,WAAW,eAAe0C,IAAI,CACpC/C,KAAMsN,EAAatN,KACnBiC,MAAO3B,EAAIqF,OAAO1G,MAClB+D,KAAMsK,EAAatK,KACnBlB,MAAM,IAAIC,MAAOC,UACjByE,KAAO6G,EAAa7G,KACpBC,KAAO4G,EAAa5G,OACrBhJ,MAAK,WACJQ,QAAQC,IAAI,qBACbuC,OAAM,SAAC5E,GACNoC,QAAQC,IAAIrC,gB,wEAgC5B,OACI,6BACI,4BAAQmB,QAASH,KAAKoQ,aAAtB,kBACA,4BAAQjQ,QAASH,KAAKsQ,aAAtB,uB,GAlFajQ,IAAMC,YA8FpBG,gBAPS,SAAU5B,GAC9B,MAAO,CACHS,KAAMT,EAAMjB,SAAS0B,KACrB1B,SAAUiB,EAAMjB,YAIT6C,CAAyB0P,IC7ElCM,I,gNAoBL5R,MAAQ,CACL6R,MAAQ,M,wEAIA,IAAD,OACCpR,EAASU,KAAKH,MAAdP,KAKR,GAHA8B,QAAQC,IAAI/B,GAGRA,EAAKqR,SAAU,CAGjB,GAAwB,MAApB3Q,KAAKnB,MAAM6R,YAA6BE,GAAZtR,EAAKmC,IAEjB2B,yBAEGG,WAAW,SAASC,IAAIlE,EAAKmC,KAI9CsO,MAAMnP,MAAK,SAAC4C,GAAS,EAAKd,SAAS,CAACgO,MAAOlN,EAAIqF,OAAOlF,aAK5D,OAEE,kBAAC,IAAD,KACE,yBAAK1D,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACGD,KAAKnB,MAAM6R,OAAS,kBAAC,IAAD,CAAOG,KAAK,kBAAkBC,UAAWX,KAC9D,kBAAC,IAAD,CAAOU,KAAK,YAAYC,UAAW5O,KACjClC,KAAKH,MAAMP,KAAKmC,KAAO,kBAAC,IAAD,CAAOqP,UAAWhN,IAC3C,kBAAC,IAAD,CAAOiN,OAAK,EAACF,KAAK,IAAIC,UAAWhL,KACjC,kBAAC,IAAD,CAAO+K,KAAK,SAASC,UAAWhN,IAChC,kBAAC,IAAD,CAAOiN,OAAK,EAACF,KAAK,mBAAmBC,UAAWtC,KAKhD,kBAAC,IAAD,CAAOqC,KAAK,QAAQC,UAAWhL,QAOzC,OAAO,S,GAtEOxF,cA8EHC,eACbC,4BACAC,aANsB,SAAA5B,GAAK,MAAK,CAChCS,KAAMT,EAAMjB,SAAS0B,SAGRiB,CAGbkQ,IC/CaO,G,YA7CX,WAAYnR,GAAQ,IAAD,sBACf,4CAAMA,IAIN,IAAMoR,EAAmBzT,OAAO0T,sCAAwC3Q,IASlE4Q,EAAQC,YAAYhS,EACtB6R,EACII,YAAgBC,IAAMC,kBAAkB,CAAEC,0BAAapO,+BACvDqO,yBAAe7T,KAIjB8T,EAAW,CACb9T,WACA+T,OAfc,CACdC,wBAAwB,EACxBC,YAAa,QACbC,mBAAmB,GAanBpR,SAAUyQ,EAAMzQ,SAChBqR,mDAzBW,OA4Bf,EAAKlT,MAAQ,CACTsS,MAAOA,EACPO,SAAUA,GA9BC,E,sEAmCf,OACI,kBAAC,IAAD,CAAUP,MAAOnR,KAAKnB,MAAMsS,OACxB,kBAAC,6BAA+BnR,KAAKnB,MAAM6S,SACvC,kBAAC,GAAD,Y,GAvCgBrR,IAAMC,WCC1C0R,IAASC,OACP,kBAAC,GAAD,MAA2B7E,SAASC,eAAe,U","file":"static/js/main.9af01fa5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// THIS IS USED TO INITIALIZE THE firebase OBJECT\n// PUT YOUR FIREBASE PROJECT CONFIG STUFF HERE\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDS4MwUxUfDde1xaC4hS6MVQuTkGVpCuK4\",\n    authDomain: \"wireframer-b43d9.firebaseapp.com\",\n    databaseURL: \"https://wireframer-b43d9.firebaseio.com\",\n    projectId: \"wireframer-b43d9\",\n    storageBucket: \"wireframer-b43d9.appspot.com\",\n    messagingSenderId: \"21831344837\",\n    appId: \"1:21831344837:web:ed2a45138b7329561ac6ac\",\n    measurementId: \"G-C9PT50B3S5\"\n};\nfirebase.initializeApp(firebaseConfig);\n\n// NOW THE firebase OBJECT CAN BE CONNECTED TO THE STORE\nexport default firebase;","// THIS FILE KNOWS HOW TO MAKE ALL THE ACTION\n// OBJECDTS THAT WE WILL USE. ACTIONS ARE SIMPLE\n// LITTLE PACKAGES THAT REPRESENT SOME EVENT\n// THAT WILL BE DISPATCHED TO THE STORE, WHICH\n// WILL TRIGGER THE EXECUTION OF A CORRESPONDING\n// REDUCER, WHICH ADVANCES STATE\n\n// THESE ARE ALL THE TYPE OF ACTIONS WE'LL BE CREATING\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_ERROR = 'REGISTER_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\n\n// THESE CREATORS MAKE ACTIONS ASSOCIATED WITH USER ACCOUNTS\n\nexport function registerSuccess() {\n    return { type: 'REGISTER_SUCCESS' }\n};\nexport function registerError(error) { \n    return { type: 'REGISTER_ERROR', error }\n};\nexport function loginSuccess() {\n    return { type: 'LOGIN_SUCCESS' }\n};\nexport function loginError(error) {\n    return { type: 'LOGIN_ERROR', error }\n};\nexport function logoutSuccess() {\n    return { type: 'LOGOUT_SUCCESS' }\n};\n\n// THESE CREATORS MAKE ACTIONS FOR ASYNCHRONOUS TODO LIST UPDATES\nexport function createTodoList(todoList) {\n    return {\n        type: 'CREATE_TODO_LIST',\n        todoList\n    }\n}\nexport function createTodoListError(error) {\n    return {\n        type: 'CREATE_TODO_LIST_ERROR',\n        error\n    }\n}","import * as actionCreators from '../actions/actionCreators'\n\n// REDUCERS ARE CALLED WHEN AN ACTION IS DISPATCHED,\n// THEIR JOB IS TO ADVANCE THE STATE. THEY WILL UPDATE\n// AND RETURN THE NEW, UPDATED STATE\n\nconst initState = {};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case actionCreators.LOGIN_ERROR:\n      return {\n        ...state,\n        authError: 'Login fail',\n      };\n    case actionCreators.LOGIN_SUCCESS:\n      return {\n        ...state,\n        authError: null,\n      };\n    case actionCreators.LOGOUT_SUCCESS:\n      return state;\n    case actionCreators.REGISTER_SUCCESS:\n      return {\n        ...state,\n        authError: null,\n      };\n    case actionCreators.REGISTER_ERROR:\n      return {\n        ...state,\n        authError: action.err.message,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","const initState = {\n    todoLists: []\n};\n\nconst todoListReducer = (state = initState, action) => {\n    switch (action.type) {\n        /* IF YOU HAVE ANY TODO LIST EDITING REDUCERS ADD THEM HERE */ \n        default:\n            return state;\n            break;\n    }\n};\n\nexport default todoListReducer;","import { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore'; // syncing firestore\nimport { firebaseReducer } from 'react-redux-firebase';\nimport authReducer from './authReducer';\nimport todoListReducer from './todoListReducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  todoList: todoListReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n});\n\nexport default rootReducer;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { logoutHandler } from '../../store/database/asynchHandler'\n\nclass LoggedInLinks extends React.Component {\n\n  // As in SignIn.jsx we need to use a function that gets as an argument firebase object\n  handleLogout = () => {\n    const { firebase } = this.props;\n    this.props.signOut(firebase);\n  }\n\n  render() {\n    const { profile } = this.props;\n    return (\n      <ul className=\"right\">\n        <li><NavLink to=\"/\" onClick={this.handleLogout}>Log Out</NavLink></li> {/* I left NavLink instead of anchor tag because I'm using airbnb eslint rules */}\n        <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{profile.initials}</NavLink></li>\n      </ul>\n    );\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: firebase => dispatch(logoutHandler(firebase)),\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(null, mapDispatchToProps),\n)(LoggedInLinks);","import * as actionCreators from '../actions/actionCreators.js'\n\nexport const loginHandler = ({ credentials, firebase }) => (dispatch, getState) => {\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password,\n    ).then(() => {\n      console.log(\"LOGIN_SUCCESS\");\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n  };\n\nexport const logoutHandler = (firebase) => (dispatch, getState) => {\n    firebase.auth().signOut().then(() => {\n        dispatch(actionCreators.logoutSuccess);\n    });\n};\n\nexport const registerHandler = (newUser, firebase) => (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(\n        newUser.email,\n        newUser.password,\n    ).then(resp => firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        email: newUser.email,\n        isAdmin: false,\n        initials: `${newUser.firstName[0]}${newUser.lastName[0]}`,\n    })).then(() => {\n        dispatch(actionCreators.registerSuccess);\n    }).catch((err) => {\n        dispatch(actionCreators.registerError);\n    });\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass LoggedOutLinks extends React.Component {\n  render() {\n    return (\n      <ul className = \"right\" >\n        <li><NavLink to=\"/register\">Register</NavLink></li>\n      </ul>\n    );\n  }\n}\n\nexport default LoggedOutLinks;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport LoggedInLinks from './LoggedInLinks';\nimport LoggedOutLinks from './LoggedOutLinks';\nimport { Modal, Button, Icon } from 'react-materialize';\nimport { withRouter } from 'react-router-dom';\n\nclass Navbar extends React.Component {\n\n  close = () =>\n    {\n      const NavbarRouter =  withRouter(Navbar);\n      console.log(this.props);\n      console.log(NavbarRouter);\n      this.props.history.push(\"/\");\n    }\n  \n  render() {\n    const { auth, profile } = this.props;\n    const links = auth.uid ? <LoggedInLinks profile={profile} /> : <LoggedOutLinks />;\n    console.log(this.props);\n    return (\n      <nav className=\"nav-wrapper grey darken-3\">\n        <div className=\"container\">\n          <Modal header=\"Return Home?\" actions={<React.Fragment><Button onClick={this.close} waves=\"green\" modal=\"close\" flat>YES </Button><Button waves=\"green\" modal=\"close\" flat>NO </Button></React.Fragment>} \n          trigger={<div className = \"brand-logo\" id = \"mouse\">@todo\n                    </div>}>\n                        <p>\n                            Are you sure you want to return to the home screen? <br></br>\n                            Make sure to save your work.\n                        </p>\n                    </Modal>\n          {/* <Link to=\"/\" className=\"brand-logo\">@todo</Link> */}\n\n          {links}\n        </div>\n      </nav>\n    );\n  };\n}\n\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n  profile: state.firebase.profile,\n});\n\nexport default withRouter(compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(Navbar));\n\n// const NavbarRouter =  withRouter(Navbar);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { registerHandler } from '../../store/database/asynchHandler'\n\nclass RegisterScreen extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { props, state } = this;\n    const { firebase } = props;\n    const newUser = { ...state };\n\n    props.register(newUser, firebase);\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Register</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n  authError: state.auth.authError,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  register: (newUser, firebase) => dispatch(registerHandler(newUser, firebase)),\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(RegisterScreen);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { loginHandler } from '../../store/database/asynchHandler'\n\nclass LoginScreen extends Component {\n  state = {\n    email: '',\n    password: '',\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    // As we use react-redux-firebas-v3 we need to pass firebase object to\n    // authActions to be authorized by using firebse.auth method\n    const { props, state } = this;\n    const { firebase } = props;\n    const credentials = { ...state };\n    const authData = {\n      firebase,\n      credentials,\n    };\n\n    props.login(authData);\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <form onSubmit={this.handleSubmit} className=\"col s4 white\">\n            <h5 className=\"grey-text text-darken-3\">Login</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">Email</label>\n              <input className=\"active\" type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"password\">Password</label>\n              <input className=\"active\" type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Login</button>\n              {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\n            </div>\n\n            <div>\n              Test Account<br />\n              Email: test@gmail.com <br />\n              Password: 123456 <br />\n              <br />\n            </div>\n          </form>\n\n          <div className=\"col s8 banner\">\n            WifrFramer<br />\n            TM\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authError: state.auth.authError,\n  auth: state.firebase.auth,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: authData => dispatch(loginHandler(authData)),\n});\n\n// We need firebaseConnect function to provide to this component\n// firebase object with auth method.\n// You can find more information on the link below\n// http://docs.react-redux-firebase.com/history/v3.0.0/docs/auth.html\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(LoginScreen);","import React from 'react';\nimport { Button, Icon, Modal } from 'react-materialize';\n\nimport { getFirestore } from 'redux-firestore';\n\nclass TodoListCard extends React.Component {\n\n    delete = () => {\n        const fireStore = getFirestore();\n        fireStore.collection('WireFramers').doc(this.props.WireFramers.id).delete();\n    }\n\n    render() {\n        const { WireFramers } = this.props;\n        console.log(\"TodoListCard, todoList.id: \" + WireFramers.id);\n        return (\n            // <div className=\"card z-depth-0 todo-list-link\">\n            //     <div className=\"card-content grey-text text-darken-3\">\n            //         <span className=\"card-title\">{todoList.name}</span>\n            //     </div>\n            // </div>\n            <li class=\"collection-item avatar\" style= {{paddingLeft:20}}>\n                <br></br>\n                <p>{WireFramers.name}</p>\n                <a href=\"#!\" class=\"secondary-content\" className = \"top25\">\n                    {/* <Button floating icon={<Icon>clear</Icon>} className=\"red\" onClick={event => { event.preventDefault(); this.delete() }}/> */}\n                    <Modal header=\"Delete Item?\" actions={<React.Fragment><Button onClick={event => { event.preventDefault(); this.delete() }} waves=\"green\" modal=\"close\" flat>YES </Button><Button onClick={event => { event.preventDefault()}} waves=\"green\" modal=\"close\" flat>NO </Button></React.Fragment>} \n                    trigger={<Button floating icon={<Icon>clear</Icon>}></Button>}>\n                        <p>\n                            Are you sure you want to delete? <br></br>\n                            Your WireFramer will not retrievable.\n                        </p>\n                    </Modal>\n                </a>\n                \n            </li>\n        );\n    }\n}\nexport default TodoListCard;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport TodoListCard from './TodoListCard';\nimport { getFirestore } from 'redux-firestore';\n\nimport { Modal, Button } from 'react-materialize';\n\nclass TodoListLinks extends React.Component {\n\n    updatetime(id) {\n        const fireStore = getFirestore();\n\n        fireStore.collection('WireFramers')\n            .doc(id)\n            .update({\n                time: new Date().getTime()\n            });\n    }\n\n    filterList(WireFramers){\n        return WireFramers.owner = this.props.auth.email;\n    }\n\n   \n\n    render() {\n        var WireFramers = this.props.WireFramers;\n\n\n        var owner = this.props.auth.email;\n        // WireFramers = WireFramers.filter(WireFramers)\n\n        console.log(\"below is WireFramers for current users\")\n        console.log(WireFramers);\n        console.log(owner);\n        \n        //.filter(WireFramers=> WireFramers)\n\n        return (\n            <div className=\"todo-lists section\">\n                <br></br>\n                <br></br>\n                {WireFramers && WireFramers.filter(WireFramers=> WireFramers.owner == owner).map(WireFramers => (\n                    <Link to={'/WireFramers/' + WireFramers.id} key={WireFramers.id} onClick={() => this.updatetime(WireFramers.id)}>\n                         <ul class=\"collection\">\n                            <TodoListCard WireFramers={WireFramers} />\n                        </ul>\n                    </Link>\n                    \n                ))}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n    if (state.firestore.ordered.WireFramers)\n        state.firestore.ordered.WireFramers.sort(function (a, b) {\n            var x = a.time;\n            var y = b.time;\n            return x < y ? 1 : x > y ? -1 : 0;\n        });\n\n\n    return {\n        WireFramers: state.firestore.ordered.WireFramers,\n\n        auth: state.firebase.auth,\n    };\n};\n\nexport default compose(connect(mapStateToProps))(TodoListLinks);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport TodoListLinks from './TodoListLinks'\nimport { getFirestore } from 'redux-firestore';\n\nimport { Link } from 'react-router-dom';\nimport TodoListCard from '../home_screen/TodoListCard';\n\nclass HomeScreen extends Component {\n\n    handleNewList = async () => {\n        const fireStore = getFirestore();\n\n\n        const docRef = await fireStore.collection('WireFramers').add\n            (\n                {owner: this.props.auth.email,name: \"unknown\", list: [], \"DimX\" : 400, \"DimY\" : 400, time: new Date().getTime() }\n            )\n        // alert(docRef.id);\n        console.log(this.props);\n        console.log(this.props.WireFramers);\n        this.props.history.push(\"/WireFramers/\" + docRef.id);\n\n\n\n\n    }\n\n    render() {\n        if (!this.props.auth.uid) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m4\">\n                        <TodoListLinks />\n                    </div>\n\n                    <div className=\"col s8\" >\n                        <div class=\"z-depth-2\">\n                            <div className=\"banner\" >\n                                WireFramers<br />\n                                TM\n                            </div>\n                        </div>\n\n                        <div className=\"home_new_list_container\">\n                            <button className=\"home_new_list_button\" onClick={this.handleNewList} class=\"waves-effect waves-light btn-large\">\n                                Create a WireFramers\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'WireFramers' },\n    ]),\n)(HomeScreen);","import React from 'react';\n// import { useHistory } from \"react-router-dom\";\nimport TodoListCard from '../home_screen/TodoListCard';\n\nimport { Link } from 'react-router-dom';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { getFirestore } from 'redux-firestore';\nimport { withRouter } from 'react-router-dom';\n\nimport { Button, Icon } from 'react-materialize';\n\n\nclass ItemCard extends React.Component {\n\n\n    isComplete = (bool) => {\n        if (bool == true) {\n            return 'Complete'\n        }\n        else {\n            return \"Pending\"\n        }\n    }\n\n    // ListScreen = () =>{\n    //     <Link to={'/todoList/' + todoList.id} key={todoList.id}>\n    //     <TodoListCard todoList={todoList} />\n    // </Link>\n    // }\n\n    goItem = () => {\n        // let history = useHistory();\n        const fireStore = getFirestore();\n        console.log(this.props);\n        //alert(this.props.todoList.id);\n        this.props.history.push(\"/todoList/\" + this.props.todoList.id + \"/item/\" + this.props.index)\n        // this.props.history.push(\"/todoList/\" + TodoListCard.id + \"/item/\" + this.props.index);\n    }\n\n    sortTask() {\n\n    }\n\n    moveUp = () => {\n        // console.log(this.props);\n        var index = this.props.index;\n        var list = JSON.parse(JSON.stringify(this.props.todoList.items));\n\n        // console.log(list);\n        if (index != 0) {\n            //alert(index + ' ' + length);\n            var t = list[index];\n            list[index] = list[index - 1];\n            list[index - 1] = t;\n\n            var i = list[index].key;\n            list[index].key = list[index - 1].key;\n            list[index - 1].key = i;\n\n            var j = list[index].id;\n            list[index].id = list[index - 1].id;\n            list[index - 1].id = j;\n        }\n        // console.log(list);\n\n        const fireStore = getFirestore();\n        fireStore.collection('todoLists')\n            .doc(this.props.todoList.id)\n            // .where('id', '==', this.props.todoList.id)\n            .update({\n                items: list\n\n            });\n    }\n\n    moveDown = () => {\n        // console.log(this.props);\n        var index = this.props.index;\n        var list = JSON.parse(JSON.stringify(this.props.todoList.items));\n\n        // console.log(list);\n        if (index != list.length - 1) {\n            //alert(index + ' ' + length);\n            var t = list[index];\n            list[index] = list[index + 1];\n            list[index + 1] = t;\n\n            var i = list[index].key;\n            list[index].key = list[index + 1].key;\n            list[index + 1].key = i;\n\n            var j = list[index].id;\n            list[index].id = list[index + 1].id;\n            list[index + 1].id = j;\n        }\n        // console.log(list);\n\n        const fireStore = getFirestore();\n        fireStore.collection('todoLists')\n            .doc(this.props.todoList.id)\n            // .where('id', '==', this.props.todoList.id)\n            .update({\n                items: list\n\n            });\n    }\n\n    delete = () => {\n        // console.log(this.props);\n        var index = this.props.index;\n        var list = JSON.parse(JSON.stringify(this.props.todoList.items));\n\n\n        list.splice(index, 1);\n        for (var i = index; i < list.length; i++) {\n            list[i].key -= 1;\n            list[i].id -= 1;\n        }\n\n        const fireStore = getFirestore();\n        fireStore.collection('todoLists')\n            .doc(this.props.todoList.id)\n            // .where('id', '==', this.props.todoList.id)\n            .update({\n                items: list\n\n            });\n    }\n\n\n    Upid = () => {\n        var index = this.props.index;\n        if (index == 0) {\n            //alert('color');\n            return 'grey';\n        }\n        else {\n            return 'yellow';\n        }\n    }\n\n    Downid = () => {\n        var index = this.props.index;\n        var length = this.props.todoList.items.length;\n        if (index == length - 1) {\n            //alert('color');\n            return 'grey';\n        }\n        else {\n            return 'blue';\n        }\n    }\n\n    render() {\n        const { item } = this.props;\n        return (\n            // <div className=\"card z-depth-0 todo-list-link pink-lighten-3\">\n            //     <div className=\"card-content grey-text text-darken-3\">\n            //         <span className=\"card-title\">{item.description}</span>\n            //         <span className='card-title'>{item.assigned_to}</span>\n            //         <span className='card-title'>{item.completed}</span>\n            //         <span className='card-title'>{item.due_date}</span>\n            //     </div>\n            // </div>\n            // <div className=\"card z-depth-0 todo-list-link pink-lighten-3\">\n            <tr style={{ cursor: 'pointer' }} className=\"card-content grey-text text-darken-3\" onClick={this.goItem}>\n                {/* <Link to={'/todoList/' + item.id} key={todoList.id}> */}\n\n\n                < td className=\"card-title\" > {item.description}\n                    < br ></br >\n                    Assigned_to: {item.assigned_to}\n                </td >\n                < td className='card-title' > {item.due_date}</td >\n                <td className='card-title'>{this.isComplete(item.completed)}</td>\n\n                <td width=\"5%\">\n                    <div >\n                        {/* <a class=\"btn-floating btn-large waves-effect waves-light red\" onClick={event => { event.stopPropagation(); this.moveUp(); }}>\n                        <i class=\"material-icons\">arrow_upward\n                    </i></a>\n                    <a class=\"btn-floating btn-large waves-effect waves-light red\"><i class=\"material-icons\">arrow_downward</i></a>\n                    <a class=\"btn-floating btn-large waves-effect waves-light red\"><i class=\"material-icons\">clear</i></a> */}\n\n\n                        <Button\n                            floating\n                            fab={{ direction: 'left' }}\n                            className=\"red\"\n                            large\n                            icon={<Icon>edit</Icon>}\n                            id=\"td-container\"\n\n                        >\n                            <Button floating icon={<Icon>clear</Icon>} className=\"red\" onClick={event => { event.stopPropagation(); this.delete() }} />\n                            <Button floating icon={<Icon>arrow_downward</Icon>} className={this.Downid()} onClick={event => { event.stopPropagation(); this.moveDown() }} />\n                            <Button floating icon={<Icon>arrow_upward</Icon>} className={this.Upid()} onClick={event => { event.stopPropagation(); this.moveUp() }} />\n                        </Button>\n                    </div>\n                </td>\n            </tr >\n            // </div>\n        );\n    }\n}\n\n// const mapStateToProps = (state) => {\n//     return {\n//         auth: state.firebase.auth\n//     };\n// };\n\n// export default compose(\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         { collection: 'todoLists' },\n//     ]),\n// )(ItemCard);\n\nexport default withRouter(ItemCard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport ItemCard from './ItemCard';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\n\nimport { getFirestore } from 'redux-firestore';\n\n\nclass ItemsList extends React.Component {\n\n    state = {\n        taskInc: false,\n        dueDateInc: false,\n        compInc: false\n    }\n\n    sortTask = () => {\n        var itemList = JSON.parse(JSON.stringify(this.props.todoList.items));\n        if (this.state.taskInc) {\n            this.setState({ taskInc: false });\n            var n = itemList.length;\n            for (var i = 0; i < n - 1; i++) {\n                for (var j = 0; j < n - i - 1; j++) {\n                    if (itemList[j].description < itemList[j + 1].description) {\n                        var t = itemList[j];\n                        itemList[j] = itemList[j + 1];\n                        itemList[j + 1] = t;\n\n                        var k = itemList[j].key;\n                        itemList[j].key = itemList[j + 1].key;\n                        itemList[j + 1].key = k;\n\n                        var k = itemList[j].id;\n                        itemList[j].id = itemList[j + 1].id;\n                        itemList[j + 1].id = k;\n\n                    }\n                }\n            }\n        }\n        else {\n            this.setState({ taskInc: true });\n            var n = itemList.length;\n            for (var i = 0; i < n - 1; i++) {\n                for (var j = 0; j < n - i - 1; j++) {\n                    if (itemList[j].description > itemList[j + 1].description) {\n                        var t = itemList[j];\n                        itemList[j] = itemList[j + 1];\n                        itemList[j + 1] = t;\n\n                        var k = itemList[j].key;\n                        itemList[j].key = itemList[j + 1].key;\n                        itemList[j + 1].key = k;\n\n                        var k = itemList[j].id;\n                        itemList[j].id = itemList[j + 1].id;\n                        itemList[j + 1].id = k;\n                    }\n                }\n            }\n        }\n        const fireStore = getFirestore();\n        fireStore.collection('todoLists')\n            .doc(this.props.todoList.id)\n            // .where('id', '==', this.props.todoList.id)\n            .update({\n                items: itemList\n\n            });\n\n    }\n\n    sortDueDate = () => {\n        var itemList = JSON.parse(JSON.stringify(this.props.todoList.items));\n        if (this.state.taskInc) {\n            this.setState({ taskInc: false });\n            var n = itemList.length;\n            for (var i = 0; i < n - 1; i++) {\n                for (var j = 0; j < n - i - 1; j++) {\n                    if (itemList[j].due_date < itemList[j + 1].due_date) {\n                        var t = itemList[j];\n                        itemList[j] = itemList[j + 1];\n                        itemList[j + 1] = t;\n\n                        var k = itemList[j].key;\n                        itemList[j].key = itemList[j + 1].key;\n                        itemList[j + 1].key = k;\n\n                        var k = itemList[j].id;\n                        itemList[j].id = itemList[j + 1].id;\n                        itemList[j + 1].id = k;\n\n                    }\n                }\n            }\n        }\n        else {\n            this.setState({ taskInc: true });\n            var n = itemList.length;\n            for (var i = 0; i < n - 1; i++) {\n                for (var j = 0; j < n - i - 1; j++) {\n                    if (itemList[j].due_date > itemList[j + 1].due_date) {\n                        var t = itemList[j];\n                        itemList[j] = itemList[j + 1];\n                        itemList[j + 1] = t;\n\n                        var k = itemList[j].key;\n                        itemList[j].key = itemList[j + 1].key;\n                        itemList[j + 1].key = k;\n\n                        var k = itemList[j].id;\n                        itemList[j].id = itemList[j + 1].id;\n                        itemList[j + 1].id = k;\n                    }\n                }\n            }\n        }\n        const fireStore = getFirestore();\n        fireStore.collection('todoLists')\n            .doc(this.props.todoList.id)\n            // .where('id', '==', this.props.todoList.id)\n            .update({\n                items: itemList\n\n            });\n    }\n\n\n    sortStatae = () => {\n        var itemList = JSON.parse(JSON.stringify(this.props.todoList.items));\n        if (this.state.taskInc) {\n            this.setState({ taskInc: false });\n            var n = itemList.length;\n            for (var i = 0; i < n - 1; i++) {\n                for (var j = 0; j < n - i - 1; j++) {\n                    if (itemList[j].completed < itemList[j + 1].completed) {\n                        var t = itemList[j];\n                        itemList[j] = itemList[j + 1];\n                        itemList[j + 1] = t;\n\n                        var k = itemList[j].key;\n                        itemList[j].key = itemList[j + 1].key;\n                        itemList[j + 1].key = k;\n\n                        var k = itemList[j].id;\n                        itemList[j].id = itemList[j + 1].id;\n                        itemList[j + 1].id = k;\n\n                    }\n                }\n            }\n        }\n        else {\n            this.setState({ taskInc: true });\n            var n = itemList.length;\n            for (var i = 0; i < n - 1; i++) {\n                for (var j = 0; j < n - i - 1; j++) {\n                    if (itemList[j].completed > itemList[j + 1].completed) {\n                        var t = itemList[j];\n                        itemList[j] = itemList[j + 1];\n                        itemList[j + 1] = t;\n\n                        var k = itemList[j].key;\n                        itemList[j].key = itemList[j + 1].key;\n                        itemList[j + 1].key = k;\n\n                        var k = itemList[j].id;\n                        itemList[j].id = itemList[j + 1].id;\n                        itemList[j + 1].id = k;\n                    }\n                }\n            }\n        }\n        const fireStore = getFirestore();\n        fireStore.collection('todoLists')\n            .doc(this.props.todoList.id)\n            // .where('id', '==', this.props.todoList.id)\n            .update({\n                items: itemList\n\n            });\n    }\n\n    addNewItem = () => {\n        // console.log(this.props);\n\n        var data = JSON.parse(JSON.stringify(this.props.todoList.items));\n\n        // console.log(data);\n\n        var newItem = {\n            assigned_to: 'None',\n            completed: false,\n            due_date: 'mm/dd/yyyy',\n            description: 'None',\n            id: data.length,\n            key: data.length\n        }\n        data.push(newItem);\n        console.log(data);\n        const fireStore = getFirestore();\n        fireStore.collection('todoLists')\n            .doc(this.props.todoList.id)\n            // .where('id', '==', this.props.todoList.id)\n            .update({\n                items: data\n\n            });\n\n    }\n\n\n    render() {\n        const todoList = this.props.todoList;\n        const items = todoList.items;\n        console.log(\"ItemsList: todoList.id \" + todoList.id);\n        return (\n            <div className=\"todo-lists section\">\n                <table className='highlight'>\n                    <thead>\n                        <tr>\n                            <th class=\"hov\" onClick={this.sortTask} style={{ cursor: 'pointer', fontSize: '30px' }}>Task</th>\n                            <th class=\"hov\" onClick={this.sortDueDate} style={{ cursor: 'pointer', fontSize: '30px' }}>Due Date</th>\n                            <th class=\"hov\" onClick={this.sortStatae} style={{ cursor: 'pointer', fontSize: '30px' }}>Status</th>\n                            <th>&emsp;</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {items && items.map(function (item, index) {\n                            item.id = item.key;\n                            return (\n\n                                <ItemCard todoList={todoList} key={index} index={index} item={item} />\n\n                            );\n                        })\n                        }\n                        <tr onClick={this.addNewItem} style={{ cursor: 'pointer', fontSize: '20px' }}>\n                            {/* <td></td>\n                            <td colspan='3' align='right'>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Add New Item</td> */}\n                            <td colspan=\"4\" id=\"add_new\">Add New Item</td>\n                        </tr>\n                    </tbody>\n\n                </table>\n\n\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const todoList = ownProps.todoList;\n    return {\n        todoList,\n        auth: state.firebase.auth,\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'todoLists' },\n    ]),\n)(ItemsList);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getFirestore } from 'redux-firestore';\r\nimport { Modal, Button, Icon } from 'react-materialize';\r\n\r\nclass PanelLeft extends React.Component {\r\n\r\n    \r\n\r\n    addContainer = () =>\r\n    {\r\n        \r\n\r\n        var container = {\r\n            \"type\": \"container\",\r\n            \"value\": null,\r\n            \"style\": \r\n                {\r\n                    \"posX\": 0,\r\n                    \"posY\": 0,\r\n                    \"width\": '200px',\r\n                    \"height\": '100px',\r\n                    \"fontSize\": 15,\r\n                    \"fontColor\" : '#636363',\r\n                    \"backgroundColor\": \"#FFFFFF\",\r\n                    \"borderColor\": \"#000000\",\r\n                    \"borderWidth\": 1,\r\n                    \"borderRadius\": 1\r\n                }\r\n            \r\n        };\r\n\r\n        this.props.control_list.push(container);\r\n        this.props.updateState(this.props.control_list);\r\n        console.log(this.props);\r\n    }\r\n\r\n    addLabel = () =>\r\n    {\r\n\r\n        var label = {\r\n            \"type\": \"label\",\r\n            \"value\": \"Prompt for Input\",\r\n            \"style\": \r\n                {\r\n                    \"posX\": 0,\r\n                    \"posY\": 0,\r\n                    \"width\": '200px',\r\n                    \"height\": '25px',\r\n                    \"fontSize\": 15,\r\n                    \"fontColor\" : '#636363',\r\n                    \"backgroundColor\": \"#FFFFFF\",\r\n                    \"borderColor\": \"#000000\",\r\n                    \"borderWidth\": 0,\r\n                    \"borderRadius\": 0\r\n                }\r\n            \r\n        };\r\n\r\n        this.props.control_list.push(label);\r\n        this.props.updateState(this.props.control_list);\r\n        console.log(this.props);\r\n    }\r\n\r\n    addButton = () =>\r\n    {\r\n\r\n\r\n        var button = {\r\n            \"type\": \"button\",\r\n            \"value\": \"Submit\",\r\n            \"style\": \r\n                {\r\n                    \"posX\": 0,\r\n                    \"posY\": 0,\r\n                    \"width\": '100px',\r\n                    \"height\": '30px',\r\n                    \"fontSize\": 15,\r\n                    \"fontColor\" : '#000000',\r\n                    \"backgroundColor\": \"#e1e1e1\",\r\n                    \"borderColor\": \"#000000\",\r\n                    \"borderWidth\": 1,\r\n                    \"borderRadius\": 1\r\n                }\r\n            \r\n        };\r\n\r\n        this.props.control_list.push(button);\r\n        this.props.updateState(this.props.control_list);\r\n        console.log(this.props);\r\n    }\r\n\r\n    addTextfield = () =>\r\n    {\r\n\r\n        var textfield = {\r\n            \"type\": \"textfield\",\r\n            \"value\": \"input\",\r\n            \"style\": \r\n                {\r\n                    \"posX\": 0,\r\n                    \"posY\": 0,\r\n                    \"width\": \"100px\",\r\n                    \"height\": '30px',\r\n                    \"fontSize\": 15,\r\n                    \"fontColor\" : '#e1e1e1',\r\n                    \"backgroundColor\": \"#FFFFFF\",\r\n                    \"borderColor\": \"#000000\",\r\n                    \"borderWidth\": 0,\r\n                    \"borderRadius\": 0\r\n                }\r\n            \r\n        };\r\n\r\n        this.props.control_list.push(textfield);\r\n        this.props.updateState(this.props.control_list);\r\n        console.log(this.props);\r\n    }\r\n\r\n    save = () =>\r\n    {\r\n        var data = JSON.parse(JSON.stringify(this.props.control_list));\r\n    \r\n        const fireStore = getFirestore();\r\n\r\n        console.log(this.props);\r\n        fireStore.collection('WireFramers')\r\n            .doc(this.props.WireFramer.id)\r\n            .update({\r\n                list: data,\r\n                DimX : this.props.DimX,\r\n                DimY : this.props.DimY\r\n            });\r\n        this.props.disableSave();\r\n    }\r\n\r\n    close = () =>\r\n    {\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card-panel yellow lighten-5\" id = \"leftPanel\">\r\n                <table>\r\n                <tr> <td>\r\n                <div>\r\n                    <a class=\"btn-floating waves-effect waves-light red\" disabled ={this.props.enableZoomIn}><i class=\"material-icons\"  onClick = {this.props.updateZoomIn}>zoom_in</i></a>\r\n                    <a class=\"btn-floating waves-effect waves-light red\" disabled ={this.props.enableZoomOut}><i class=\"material-icons\"  onClick = {this.props.updateZoomOut}>zoom_out</i></a>\r\n                \r\n                    {/* disable save */}\r\n                    <button class=\"btn waves-effect waves-light red\" type=\"submit\" name=\"action\" disabled = {this.props.enableSave} onClick = {this.save}>save</button>\r\n\r\n                    {\r\n                    this.props.enableSave?\r\n                    <button class=\"btn waves-effect waves-light red\" type=\"submit\" name=\"action\" onClick = {this.close}>close</button>\r\n                    :\r\n                    <Modal header=\"No Save?\" actions={<React.Fragment><Button onClick={this.close} waves=\"green\" modal=\"close\" flat>YES </Button><Button waves=\"green\" modal=\"close\" flat>NO </Button></React.Fragment>} trigger={<div class=\"btn waves-effect waves-light red\">CLOSE\r\n                    </div>}>\r\n                        <p>\r\n                            Are you sure you want to close without saving? <br></br>\r\n                            Your WireFramer will not be save.\r\n                        </p>\r\n                    </Modal>\r\n                    }\r\n\r\n                </div>\r\n                </td></tr>\r\n                <tr> <td>\r\n                    Current Scale: {this.props.scale*100 + '%'}\r\n                </td></tr>\r\n                </table>\r\n                <br></br>\r\n                <div style={{textAlign:\"center\", margin: 0}}>\r\n\r\n                    <svg width=\"200\" height=\"100\" onClick = {this.addContainer} style={{ cursor: 'pointer'}}>\r\n                        <rect width=\"200\" height=\"100\" id = \"rect\"></rect>\r\n                    </svg>\r\n                    <p style={{textAlign:\"center\", margin: -10}}>Container</p>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label onClick = {this.addLabel} style={{ cursor: 'pointer', fontSize: 15, color : '#636363'}}>\r\n                        Prompt for Input\r\n                    </label>\r\n                    <p style={{textAlign:\"center\", margin: 0}}>Lable</p>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <button onClick = {this.addButton} \r\n                    style={{ cursor: 'pointer', width : 100, height : 30, fontSize: 17, borderColor: \"#000000\",borderWidth: 1, backgroundColor: \"#e1e1e1\",}}>\r\n                        Submit\r\n                    </button>\r\n                    <p style={{textAlign:\"center\", margin: 0}}>Button</p>\r\n\r\n                    <br></br>\r\n\r\n                    <input type=\"text\"  value = \"\" placeholder=\"input\" \r\n                           style = {{width: 150, cursor: 'pointer', fontSize: 17}}onClick = {this.addTextfield}/>\r\n                    <p style={{textAlign:\"center\", margin: 0}}>TextField</p>\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default withRouter(PanelLeft);\r\n\r\n// const mapStateToProps = (state, ownProps) => {\r\n//     const WireFramer = ownProps.WireFramer;\r\n//     return {\r\n//         WireFramer,\r\n//         auth: state.firebase.auth,\r\n//     };\r\n// };\r\n\r\n// const PanelLeftWithRoutter = withRouter(PanelLeft);\r\n\r\n// export default compose(\r\n//     connect(mapStateToProps),\r\n//     firestoreConnect([\r\n//         { collection: 'WireFramers' },\r\n//     ]),\r\n// )(PanelLeft);","import React from 'react';\r\nimport { Button, Icon } from 'react-materialize';\r\n\r\nimport { getFirestore } from 'redux-firestore';\r\n\r\nimport {Rnd} from 'react-rnd';\r\nimport { isAbsolute } from 'path';\r\nimport { transform } from '@babel/core';\r\n\r\nclass Diagram extends React.Component {\r\n\r\n    diagramSize (scale)\r\n    {\r\n        // return \r\n        // {\r\n        //     borderStyle:'solid', height: this.props.DimY, width: 500,  borderWidth: 2, borderColor: 'black', backgroundColor: \"white\"\r\n        // }\r\n        return {\r\n            borderStyle: 'solid', \r\n            height: this.props.DimY + \"px\", \r\n            width:  this.props.DimX + \"px\",  \r\n            borderWidth: 2, borderColor: 'black', \r\n            backgroundColor: \"white\",\r\n            position: \"relative\",\r\n            transformOrigin: 'top left',\r\n            transform: 'scale(' + String(scale) + ')',\r\n            top: 0,\r\n            left: 0\r\n\r\n\r\n        }\r\n    }\r\n\r\n    style (control)\r\n    {\r\n        console.log(this.props);\r\n        console.log(control)\r\n        if (control.type == 'textfield' && control.style.borderWidth == 0)\r\n        {\r\n            return {\r\n                width : control.style.width,\r\n                height : control.style.height,\r\n                position :'absolute',\r\n                left : control.style.posX,\r\n                top : control.style.posY,\r\n                fontSize : control.style.fontSize,\r\n                color :control.style.fontColor,\r\n                cursor: 'pointer',\r\n                backgroundColor : control.style.backgroundColor,\r\n                borderColor : control.style.borderColor,\r\n                borderRadius : control.style.borderRadius,\r\n                zIndex : 1,\r\n\r\n            }\r\n        }\r\n        return{\r\n            width : control.style.width,\r\n            height : control.style.height,\r\n            position :'absolute',\r\n            left : control.style.posX,\r\n            top : control.style.posY,\r\n            fontSize : control.style.fontSize,\r\n            color :control.style.fontColor,\r\n            cursor: 'pointer',\r\n            backgroundColor : control.style.backgroundColor,\r\n            borderColor : control.style.borderColor,\r\n            borderWidth :control.style.borderWidth,\r\n            borderStyle : 'solid',\r\n            borderRadius : control.style.borderRadius,\r\n            zIndex : 1\r\n\r\n        }\r\n    }\r\n\r\n    inputOnSelect(control)\r\n    {\r\n        console.log(this.props);\r\n        console.log(control)\r\n        if (control.type == 'textfield' && control.style.borderWidth == 0)\r\n        {\r\n            return {\r\n                width : control.style.width,\r\n                height : control.style.height,\r\n                position :'absolute',\r\n                fontSize : control.style.fontSize,\r\n                color :control.style.fontColor,\r\n                cursor: 'move',\r\n                backgroundColor : control.style.backgroundColor,\r\n                borderColor : control.style.borderColor,\r\n                borderRadius : control.style.borderRadius,\r\n            }\r\n        }\r\n        return{\r\n            width : control.style.width,\r\n            height : control.style.height,\r\n            position :'absolute',\r\n            fontSize : control.style.fontSize,\r\n            color :control.style.fontColor,\r\n            cursor: 'move',\r\n            backgroundColor : control.style.backgroundColor,\r\n            borderColor : control.style.borderColor,\r\n            borderWidth :control.style.borderWidth,\r\n            borderStyle : 'solid',\r\n            borderRadius : control.style.borderRadius,\r\n        }\r\n    }\r\n\r\n    inputOnSelect2(control)\r\n    {\r\n        console.log(this.props);\r\n        console.log(control)\r\n        if (control.type == 'textfield' && control.style.borderWidth == 0)\r\n        {\r\n            return {\r\n                width : control.style.width,\r\n                height : control.style.height,\r\n                position :'absolute',\r\n                fontSize : control.style.fontSize,\r\n                color :control.style.fontColor,\r\n                cursor: 'pointer',\r\n                backgroundColor : control.style.backgroundColor,\r\n                borderColor : control.style.borderColor,\r\n                borderRadius : control.style.borderRadius,\r\n                zIndex :3\r\n            }\r\n        }\r\n        return{\r\n            width : control.style.width,\r\n            height : control.style.height,\r\n            position :'absolute',\r\n            fontSize : control.style.fontSize,\r\n            color :control.style.fontColor,\r\n            cursor: 'pointer',\r\n            borderStyle : 'solid',\r\n            backgroundColor : control.style.backgroundColor,\r\n            borderColor : control.style.borderColor,\r\n            borderWidth :1,\r\n            borderRadius : control.style.borderRadius,\r\n            zIndex :3\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const control_list = this.props.control_list;\r\n        console.log(this.props);\r\n        const rect = <svg width=\"20\" height=\"20\" ><rect width=\"20\" height=\"20\" style={{fill:'transparent', strokeWidth:3, stroke: 'gray'}}></rect></svg>;\r\n        return (\r\n\r\n            <div className = 'scale' style= {this.diagramSize(this.props.scale)} onClick= {this.props.unselect}>\r\n                {\r\n                    control_list && control_list.map((control, index)=>{\r\n                        // alert(control.type == \"textfield\");\r\n                        // return <p>{control.type === \"textfield\"}</p>\r\n                        control.key = index;\r\n                        console.log(control);\r\n                        console.log(this.props.current_select);\r\n\r\n\r\n                        if(control.type === \"button\" && control == this.props.current_select)\r\n                            // return <button value=\"input\" key={index} onClick={(event) => {event.stopPropagation();this.props.updateSelect(control);}} >{control.type}</button>\r\n                            return  <Rnd\r\n                \r\n                            size={{ width: control.style.width,  height: control.style.height }}\r\n                            \r\n                            onDragStop={(e, d) => {this.props.updateSelect(control);console.log(d.x, d.y);this.props.updateRepos(d.x,d.y)}}\r\n                            //transform = (d.x,d.y)\r\n                            position={{ x: control.style.posX, y:control.style.posY}}\r\n                            scale={this.props.scale}\r\n                            onResizeStop={(e, direction, ref, delta, position) => {\r\n                                this.props.updateSelect(control);\r\n                                this.props.updateResize(ref.style.width, ref.style.height,position)\r\n                              }\r\n                            }\r\n                            style = {{width: control.style.width,  \r\n                                height: control.style.height,\r\n\r\n                                //left off\r\n                                // left: control.style.posX, \r\n                                // top:control.style.posY,\r\n                                borderStyle : 'solid',\r\n\r\n                                borderColor : control.style.borderColor,\r\n                                borderRadius : control.style.borderRadius,\r\n                                borderWidth :control.style.borderWidth,\r\n                                backgroundColor: control.style.backgroundColor,\r\n                                zIndex : 1}}\r\n                                \r\n                            resizeHandleComponent = {{topRight: rect, topLeft: rect, bottomLeft: rect, bottomRight: rect}}\r\n\r\n                          >\r\n                            <button style={{ width: control.style.width,  \r\n                                            height: control.style.height, \r\n                                            color :control.style.fontColor, \r\n                                            fontSize : control.style.fontSize,\r\n\r\n\r\n                                            borderWidth :control.style.borderWidth,\r\n                                            borderStyle : 'solid',\r\n                                            borderColor : control.style.borderColor,\r\n                                            \r\n                                            borderRadius : control.style.borderRadius,\r\n                                            backgroundColor: control.style.backgroundColor,\r\n                                            cursor : 'move',\r\n                                            zIndex : 1}}\r\n                                             onClick={(event) => {event.stopPropagation();this.props.updateSelect(control);}} >{control.value}</button>\r\n                          </Rnd>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        if(control.type === \"label\" && control == this.props.current_select)\r\n                            // return <button value=\"input\" key={index} onClick={(event) => {event.stopPropagation();this.props.updateSelect(control);}} >{control.type}</button>\r\n                            return  <Rnd\r\n                \r\n                            size={{ width: control.style.width,  height: control.style.height }}\r\n                            position={{ x: control.style.posX, y:control.style.posY}}\r\n                            onDragStop={(e, d) => {this.props.updateSelect(control);this.props.updateRepos(d.x,d.y)}}\r\n                            scale={this.props.scale}\r\n                            onResizeStop={(e, direction, ref, delta, position) => {\r\n                                this.props.updateSelect(control);\r\n                                this.props.updateResize(ref.style.width, ref.style.height,position)\r\n                              }\r\n                            }\r\n                            style = {{width: control.style.width,  \r\n                                      height: control.style.height,\r\n                                      borderStyle : 'solid',\r\n                                      borderColor : control.style.borderColor,\r\n                                      borderRadius : control.style.borderRadius,\r\n                                      borderWidth :control.style.borderWidth,\r\n                                      backgroundColor: control.style.backgroundColor,\r\n                                      zIndex : 1}}\r\n\r\n                            resizeHandleComponent = {{topRight: rect, topLeft: rect, bottomLeft: rect, bottomRight: rect}}\r\n\r\n                          >\r\n                            <label style={{ \r\n                                            color :control.style.fontColor, \r\n                                            fontSize : control.style.fontSize,\r\n                                            cursor : 'move'}}\r\n                                             onClick={(event) => {event.stopPropagation();this.props.updateSelect(control);}} >{control.value}</label>\r\n                          </Rnd>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        if(control.type === \"container\" && control == this.props.current_select)\r\n                            // return <button value=\"input\" key={index} onClick={(event) => {event.stopPropagation();this.props.updateSelect(control);}} >{control.type}</button>\r\n                            return  <Rnd\r\n                            scale={this.props.scale}\r\n                            size={{ width: control.style.width,  height: control.style.height }}\r\n                            position={{ x: control.style.posX, y:control.style.posY}}\r\n                            onDragStop={(e, d) => {this.props.updateSelect(control);this.props.updateRepos(d.x,d.y)}}\r\n                            \r\n                            onResizeStop={(e, direction, ref, delta, position) => {\r\n                                this.props.updateSelect(control);\r\n                                this.props.updateResize(ref.style.width, ref.style.height,position)\r\n                              }\r\n                            }\r\n                            style = {{width: control.style.width,  \r\n                                      height: control.style.height,\r\n                                      borderStyle : 'solid',\r\n                                      borderColor : control.style.borderColor,\r\n                                      borderRadius : control.style.borderRadius,\r\n                                      borderWidth :control.style.borderWidth,\r\n                                    }}\r\n\r\n                            resizeHandleComponent = {{topRight: rect, topLeft: rect, bottomLeft: rect, bottomRight: rect}}\r\n\r\n                          >\r\n                            <svg style = {{width: control.style.width,  \r\n                                      height: control.style.height\r\n                                    }} onClick={(event) => {event.stopPropagation();this.props.updateSelect(control);}} ><rect></rect></svg>\r\n                          </Rnd>\r\n\r\n                        if(control.type === \"textfield\" && control == this.props.current_select)\r\n                            // return <button value=\"input\" key={index} onClick={(event) => {event.stopPropagation();this.props.updateSelect(control);}} >{control.type}</button>\r\n                            return  <Rnd\r\n                \r\n                            size={{ width: control.style.width,  height: control.style.height }}\r\n                            position={{ x: control.style.posX, y:control.style.posY}}\r\n                            onDragStop={(e, d) => {this.props.updateSelect(control);this.props.updateRepos(d.x,d.y)}}\r\n                            scale={this.props.scale}\r\n                            onResizeStop={(e, direction, ref, delta, position) => {\r\n                                this.props.updateSelect(control);\r\n                                this.props.updateResize(ref.style.width, ref.style.height,position)\r\n                              }\r\n                            }\r\n                            style = {this.inputOnSelect2(control)}\r\n\r\n                            resizeHandleComponent = {{topRight: rect, topLeft: rect, bottomLeft: rect, bottomRight: rect}}\r\n\r\n                          >\r\n                            <input type=\"text\" style={this.inputOnSelect(control)} value={control.value}  onClick={(event) => {event.stopPropagation();this.props.updateSelect(control);}} />\r\n                          </Rnd>\r\n\r\n                        if (control.type === 'button')\r\n                            return <button style = {this.style(control)} onClick={(event) => {event.stopPropagation();this.props.updateSelect(control);}} >{control.value}</button>\r\n\r\n                        if(control.type === \"textfield\")\r\n                            return <input type=\"text\" style={this.style(control)}  value= {control.value}  onClick={(event) => {event.stopPropagation();this.props.updateSelect(control);}} />\r\n\r\n\r\n                        if (control.type === \"label\")\r\n                            return <label style = {this.style(control)} onClick={(event) => {event.stopPropagation();this.props.updateSelect(control);}} >{control.value}</label>\r\n                        \r\n                        if (control.type = 'container')\r\n                            return <svg style = {{width: control.style.width,  \r\n                                height: control.style.height,\r\n                                borderStyle : 'solid',\r\n                                borderColor : control.style.borderColor,\r\n                                borderRadius : control.style.borderRadius,\r\n                                borderWidth :control.style.borderWidth,\r\n                                position :\"absolute\",\r\n                                left : control.style.posX,\r\n                                top : control.style.posY,\r\n                                fill:'transparent',\r\n                                cursor: 'pointer'}}\r\n                                onClick={(event) => {event.stopPropagation();this.props.updateSelect(control);}} >\r\n                                <rect></rect>\r\n                            </svg>\r\n                        \r\n                        \r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Diagram;","import React from 'react';\r\nimport { Button, Icon } from 'react-materialize';\r\n\r\nimport { getFirestore } from 'redux-firestore';\r\n\r\nimport { SketchPicker } from 'react-color';\r\n\r\nclass Property extends React.Component {\r\n\r\n    updateProperty = () =>\r\n    {\r\n        if (this.props.current_select.type == 'container')\r\n        {\r\n            var borderWidth = document.getElementById('borderWidth').value;\r\n            var borderRadius = document.getElementById('borderRadius').value;\r\n            var borderColor = document.getElementById('borderColor').value;\r\n            this.props.updateProperty_Container(borderWidth, borderRadius, borderColor);\r\n        }\r\n        else\r\n        {\r\n            var property = document.getElementById(\"property\").value;\r\n            var fontSize = document.getElementById(\"fontSize\").value;\r\n            var fontColor = document.getElementById('fontColor').value;\r\n            var borderWidth = document.getElementById('borderWidth').value;\r\n            var borderRadius = document.getElementById('borderRadius').value;\r\n            var borderColor = document.getElementById('borderColor').value;\r\n            var backGroundColor = document.getElementById('backGroundColor').value;\r\n            this.props.updateProperty(property,fontSize, fontColor,borderWidth,borderRadius,borderColor, backGroundColor);\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    \r\n    // updateProperty1 = () =>\r\n    // {\r\n    //     // var property = document.getElementById(\"property\").value;\r\n    //     // var fontColor = document.getElementById('fontColor').value;\r\n    //     // this.props.updateProperty(property);\r\n\r\n    //     var newValue = this.props.current_select.value && document.getElementById(\"property\").value\r\n    //     var newProperty = {\r\n    //         \"type\": this.props.current_select.type,\r\n    //         \"value\": newValue,\r\n    //         // that way container is nul\r\n    //         \"style\": \r\n    //             {\r\n    //                 \"posX\": this.props.current_select.style.posX,\r\n    //                 \"posY\": this.props.current_select.style.posY,\r\n    //                 \"width\": this.props.current_select.style.width,\r\n    //                 \"height\": this.props.current_select.style.height,\r\n    //                 \"fontSize\": document.getElementById('fontSize').value,\r\n    //                 \"fontColor\" : document.getElementById('fontColor').value,\r\n\r\n    //                 \"background-color\": document.getElementById('backGroundColor').value,\r\n    //                 \"border-color\": document.getElementById('borderColor').value,\r\n    //                 \"border-thinkness\": document.getElementById('fontColor').value,\r\n    //                 \"border-radius\": document.getElementById('fontColor').value,\r\n    //             }\r\n            \r\n    //     };\r\n    // }\r\n\r\n\r\n    render() {\r\n        // alert(this.props.current_select.value);\r\n        console.log(this.props.current_select);\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card-panel yellow lighten-5\">\r\n                    <span>Selected : {this.props.current_select.type}</span>\r\n                    {\r\n                       (this.props.current_select.type == 'container') ?\r\n                       null :\r\n                        <div className=\"input-field\">\r\n                        <label className=\"active\" >Property</label>\r\n                        <input className=\"active\" id = \"property\" type=\"text\" value = {this.props.current_select.value} onChange= {this.updateProperty}/>\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                    (this.props.current_select.type == 'container') ?\r\n                       null :\r\n                    <div className=\"input-field\">\r\n                        <label className=\"active\" htmlFor=\"email\">Font Size</label>\r\n                        <input className=\"active\" id = 'fontSize' type=\"text\" value = {this.props.current_select.style.fontSize} onChange= {this.updateProperty}/>\r\n                    </div>\r\n                    }\r\n\r\n                    {\r\n                    (this.props.current_select.type == 'container') ?\r\n                       null :\r\n                    <div className=\"input-field\">\r\n                        <label className=\"active\" htmlFor=\"email\">Font Color</label>\r\n                        <input id='fontColor' className=\"active\" type=\"text\" value = {this.props.current_select.style.fontColor} onClick = {this.props.showFontColor}/>\r\n                        {\r\n            \r\n                            this.props.showFontColorBool &&\r\n                            <SketchPicker\r\n                            color= {this.props.current_select.style.fontColor}\r\n                            onChangeComplete={ (color) => {document.getElementById('fontColor').value = color.hex;\r\n                            this.props.updateProperty(document.getElementById(\"property\").value,\r\n                                                      document.getElementById(\"fontSize\").value,\r\n                                                      document.getElementById('fontColor').value,\r\n                                                      document.getElementById('borderWidth').value,\r\n                                                      document.getElementById('borderRadius').value,\r\n                                                      document.getElementById('borderColor').value,\r\n                                                      document.getElementById('backGroundColor').value\r\n                                                     );}}\r\n                        />}\r\n                    </div>\r\n                    }\r\n\r\n                    {\r\n                    (this.props.current_select.type == 'container') ?\r\n                       null :\r\n                    <div className=\"input-field\">\r\n                        <label className=\"active\" htmlFor=\"email\">BackGround Color</label>\r\n                        <input className=\"active\" id = 'backGroundColor'  value = {this.props.current_select.style.backgroundColor} type=\"text\" onClick = {this.props.showBackgroundColor}/>\r\n                        {\r\n            \r\n                            this.props.showBackgroundColorBool &&\r\n                            <SketchPicker\r\n                            color= {this.props.current_select.style.backgroundColor}\r\n                            onChangeComplete={ (color) => {document.getElementById('backGroundColor').value = color.hex;\r\n                            this.props.updateProperty(document.getElementById(\"property\").value,\r\n                                                      document.getElementById(\"fontSize\").value,\r\n                                                      document.getElementById('fontColor').value,\r\n                                                      document.getElementById('borderWidth').value,\r\n                                                      document.getElementById('borderRadius').value,\r\n                                                      document.getElementById('borderColor').value,\r\n                                                      document.getElementById('backGroundColor').value\r\n                                                     );}}\r\n                        />}\r\n                    </div>\r\n                    }\r\n\r\n                    <div className=\"input-field\">\r\n                        <label className=\"active\" htmlFor=\"email\">Border Color</label>\r\n                        <input className=\"active\" id = 'borderColor' value = {this.props.current_select.style.borderColor}type=\"text\" onClick = {this.props.showBorderColor}/>\r\n                        {\r\n            \r\n                            this.props.showBorderColorBool &&\r\n                            <SketchPicker\r\n                            color= {this.props.current_select.style.borderColor}\r\n                            onChangeComplete={ (color) => {document.getElementById('borderColor').value = color.hex;\r\n                            if (this.props.current_select.type != 'container'){\r\n                            this.props.updateProperty(document.getElementById(\"property\").value,\r\n                                                      document.getElementById(\"fontSize\").value,\r\n                                                      document.getElementById('fontColor').value,\r\n                                                      document.getElementById('borderWidth').value,\r\n                                                      document.getElementById('borderRadius').value,\r\n                                                      document.getElementById('borderColor').value,\r\n                                                      document.getElementById('backGroundColor').value\r\n                                                     );}\r\n                            else\r\n                            {\r\n                                this.props.updateProperty_Container(document.getElementById(\"borderWidth\").value, \r\n                                                                    document.getElementById(\"borderRadius\").value, \r\n                                                                    document.getElementById('borderColor').value);\r\n                            }\r\n                        }}\r\n                        />}\r\n                    \r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label className=\"active\" htmlFor=\"email\">Border Thickness</label>\r\n                        <input className=\"active\" id = 'borderWidth' value = {this.props.current_select.style.borderWidth} type=\"text\" onChange= {this.updateProperty} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label className=\"active\" htmlFor=\"email\">Border Radius</label>\r\n                        <input className=\"active\" id = 'borderRadius' value = {this.props.current_select.style.borderRadius}type=\"text\" onChange= {this.updateProperty} />\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Property;","import React from 'react';\r\nimport { Button, Icon } from 'react-materialize';\r\n\r\nimport { getFirestore } from 'redux-firestore';\r\n\r\nclass Dimension extends React.Component {\r\n\r\n    state ={\r\n        width : null,\r\n        height : null\r\n    }\r\n    // componentDidMount()\r\n    // {\r\n    //     if (this.props.DimX != 0)\r\n    //     {\r\n    //     alert(this.props.DimX);\r\n    //     this.setState({width: this.props.DimX})\r\n    //     }\r\n    // }\r\n\r\n    render() {;\r\n        if (this.props.DimX != 0 && this.state.width == null)\r\n        {\r\n            this.setState({width: this.props.DimX,\r\n                            height : this.props.DimY})\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"card-panel yellow lighten-5\">\r\n\r\n                    <form onSubmit={this.props.updateDimState}>\r\n                    <p>Wireframer Dimension</p>\r\n                    <br></br>\r\n                    <div className=\"input-field\">\r\n                        <label className=\"active\" >Width</label>\r\n                        <input className=\"active\" name=\"dimX\" id = \"dimX\" type=\"number\" min=\"1\" max=\"5000\" defaultValue = {this.state.width} onChange = {this.props.enableUpdate}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label className=\"active\" >Height</label>\r\n                        <input className=\"active\" name=\"dimY\" id = \"dimY\" type=\"number\" min=\"1\" max=\"5000\" defaultValue = {this.state.height} onChange = {this.props.enableUpdate}/>\r\n                    </div>\r\n                    <button class=\"btn waves-effect waves-light red\" type=\"submit\" name=\"action\" disabled = {this.props.disableUpdate}>update</button>\r\n                    </form>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n        \r\n    }\r\n}\r\nexport default Dimension;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport ItemsList from './ItemsList.js'\nimport { firestoreConnect } from 'react-redux-firebase';\n\nimport { getFirestore } from 'redux-firestore';\n\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport { Modal, Button } from 'react-materialize';\nimport PanelLeft from './PanelLeft.js';\nimport Diagram from './Diagram.js';\nimport Property from './Property.js';\nimport Dimension from \"./Dimension.js\";\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\n\n\n\nclass ListScreen extends Component {\n    // state = {\n    //     name: '',\n    //     owner: '',\n    // }\n    handleChange = (e) => {\n        const fireStore = getFirestore();\n        fireStore.collection('WireFramers')\n            .doc(this.props.WireFramer.id)\n            .update({\n                name: document.getElementById('name').value\n\n            });\n    }\n\n    //     const { target } = e;\n    //     this.setState(state => ({\n    //         ...state,\n    //         [target.id]: target.value,\n    //     }));\n\n    //     const fireStore = getFirestore();\n    //     // fireStore.collection('todoLists').where('id', '==', this.props.todoList.id).get().then(function (querySnapshot) {\n    //     //     querySnapshot.forEach(function (doc) {\n    //     //         console.log(\"deleting \" + doc.id);\n    //     //         fireStore.collection('todoLists').doc(doc.id).update({ name: 'test1' });\n    //     //     })\n    //     // });\n    //     // fireStore.collection('todoLists').add(\n    //     //     { name: 'puta' }\n    //     // )\n    //     // fireStore.collection('todoLists').where('id', '==', this.props.todoList.id)\n    //     //     .get()\n    //     //     .then(function (querySnapshot) {\n    //     //         console.log(querySnapshot);\n    //     //         querySnapshot.forEach(function (doc) {\n    //     //             console.log(doc.id, \" => \", doc.data());\n    //     //             // Build doc ref from doc.id\n    //     //             fireStore.collection(\"todoLists\").doc(doc.id).update({ name: 'test' });\n    //     //         });\n    //     //     })\n    //     fireStore.collection('todoLists')\n    //         .doc(this.props.todoList.id)\n    //         // .where('id', '==', this.props.todoList.id)\n    //         .update({\n    //             name: document.getElementById('name').value,\n    //             owner: document.getElementById('owner').value\n\n    //         });\n    //     // .get()\n    //     // .then(function (querySnapshot) {\n    //     //     console.log(querySnapshot);\n    //     //     querySnapshot.forEach(function (doc) {\n    //     //         console.log(doc.id, \" => \", doc.data());\n    //     //         // Build doc ref from doc.id\n    //     //         fireStore.collection(\"todoLists\").doc(doc.id).update({ name: 'test' });\n    //     //     });\n    //     // })\n\n    // }\n\n    // delete = () => {\n    //     const fireStore = getFirestore();\n    //     fireStore.collection('WireFramers').doc(this.props.WireFramers.id).delete();\n    //     // console.log(this.props);\n    //     this.props.history.push(\"/\");\n    // }\n    // constructor(props){\n    //     super(props);\n    //     if(this.props.WireFramer)\n    //     this.state = {control_list: this.props.WireFramer.list};\n    // }\n    state = {\n        control_list : [],\n        current_select:  null,\n        DimX : 0,\n        DimY : 0,\n\n        showFontColor:false,\n        showBorderColor: false,\n        showBackgroundColor: false,\n\n        scale: 1.0,\n\n        enableSave : true,\n        enableZoomIn : false,\n        enableZoomOut :false,\n\n        disableUpdate : true,\n\n\n    }\n\n    enableUpdate()\n    {\n        this.setState({disableUpdate : false});\n    }\n\n    disableSave()\n    {\n        this.setState({enableSave : true});\n    }\n    \n    escFunction = (event) => {\n        if (event.keyCode === 46) \n        {\n            if(this.state.current_select != null)\n            {\n                var control_list = JSON.parse(JSON.stringify(this.state.control_list));\n                control_list.splice(this.state.current_select.key,1);\n                this.setState({current_select: null ,\n                            control_list: control_list,\n                            enableSave: false});\n            }\n        }\n        else if (event.keyCode === 68 && event.ctrlKey) {\n            if(this.state.current_select != null)\n            {\n                var control_list = JSON.parse(JSON.stringify(this.state.control_list));\n                var copyControl = JSON.parse(JSON.stringify(this.state.current_select));\n\n                var width = this.state.current_select.style.width;\n                var height = this.state.current_select.style.height;\n\n                if (typeof width === 'string')\n                {\n                    width = Number(this.state.current_select.style.width.slice(0,-2));\n                }\n                if (typeof height === 'string')\n                {\n                    height = Number(this.state.current_select.style.height.slice(0,-2));\n                }\n                \n                // var width = Number(this.state.current_select.style.width.slice(0,-2));\n                // var height = Number(this.state.current_select.style.height.slice(0,-2));\n                if (copyControl.style.posX + 100 + width> this.state.DimX)\n                {\n                    copyControl.style.posX = this.state.DimX - width;\n                }\n                else\n                {\n                    copyControl.style.posX += 100;\n                }\n                if (copyControl.style.posY + 100 + height > this.state.DimY)\n                {\n                    copyControl.style.posY = this.state.DimY - height;\n                }\n                else\n                {\n                    copyControl.style.posY += 100;\n                }\n\n\n\n\n                control_list.push(copyControl);\n                this.setState({current_select: copyControl ,\n                    control_list: control_list,\n                    enableSave: false});\n            }\n        }\n    }\n\n    componentDidMount(){\n        if(this.props.WireFramer)\n            this.setState({control_list: this.props.WireFramer.list,\n                            DimX : this.props.WireFramer.DimX,\n                            DimY : this.props.WireFramer.DimY});\n            document.addEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    componentDidUpdate(prevProps){\n        console.log(prevProps);\n        console.log(this.props.WireFramer);\n        if(!prevProps.WireFramer && this.props.WireFramer != null )\n            this.setState({control_list: this.props.WireFramer.list,\n                        DimX : this.props.WireFramer.DimX,\n                        DimY : this.props.WireFramer.DimY});\n            document.addEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    // start\n    updateState(control)\n    {\n        this.setState({control_list: control,\n            enableSave: false});\n    }\n\n    updateDimState(event)\n    {\n        event.preventDefault();\n\n        let width = event.target.dimX.value;\n        let height = event.target.dimY.value;\n        var control_list = JSON.parse(JSON.stringify(this.state.control_list));\n\n        control_list.forEach(element => {\n            \n            var eleWidth = element.style.width;\n            var eleHeight = element.style.height;\n\n            if (typeof eleWidth === 'string')\n            {\n                eleWidth = Number(element.style.width.slice(0,-2))\n            }\n            if (typeof eleHeight === 'string')\n            {\n                eleHeight = Number(element.style.height.slice(0,-2));\n            }\n            if(eleWidth + element.style.posX > width)\n            {\n                element.style.posX = 0;\n            }\n            if(eleHeight + element.style.posY > height)\n            {\n                element.style.posY= 0;\n            }\n        });\n\n\n\n\n        this.setState({DimX : event.target.dimX.value,\n                       DimY : event.target.dimY.value,\n                       enableSave: false,\n                       disableUpdate : true,\n                       control_list: control_list\n                    })\n    \n        console.log(this.state);\n    }\n\n    updateZoomIn()\n    {\n        const newScale = this.state.scale *2;\n        if(this.state.scale == 1.0  || this.state.scale == 0.5)\n        {\n            this.setState({scale: newScale});\n        }\n        this.enableZoom(newScale);\n        \n\n    }\n\n    updateZoomOut()\n    {\n        const newScale = this.state.scale /2;\n        if(this.state.scale == 1.0  || this.state.scale == 2.0)\n        {\n            this.setState({scale: newScale})\n        }\n        this.enableZoom(newScale);\n    }\n\n    enableZoom (newScale){\n        if (newScale == 0.5){\n            this.setState({enableZoomOut: true,\n                            enableZoomIn: false});\n        }\n        else if (newScale == 1.0){\n            this.setState({enableZoomOut: false,\n                            enableZoomIn: false});\n        }\n        else if (newScale == 2.0){\n            this.setState({enableZoomOut: false,\n                            enableZoomIn: true});\n        }\n    }\n\n    unselect(){\n        this.setState({current_select : null,\n                       showFontColor : false,\n                       showBackgroundColor :false,\n                       showBorderColor: false});\n        console.log(this.state.current_select);\n    }\n\n    updateSelect(control)\n    {\n        this.setState({current_select: control,\n                showFontColor : false,\n                showBackgroundColor :false,\n                showBorderColor: false});\n        this.forceUpdate();\n        console.log(this.state.current_select);\n    }\n\n    updateRepos(x,y)\n    {\n        console.log(x,y);\n        \n        console.log(this.state.DimX);\n        var control = JSON.parse(JSON.stringify(this.state.current_select));\n        var control_list = JSON.parse(JSON.stringify(this.state.control_list));\n        var width = this.state.current_select.style.width;\n        var height = this.state.current_select.style.height;\n        console.log(x,y,width,height);\n\n        if (typeof width === 'string')\n        {\n            width = Number(width.slice(0,-2));\n        }\n        if (typeof height === 'string')\n        {\n            height = Number(height.slice(0,-2));\n        }\n\n        // width = Number(width.slice(0,-2));\n        // height = Number(height.slice(0,-2));\n\n        if (x + width > this.state.DimX)\n        {\n            x = this.state.DimX - width;\n        }\n        else if (x < 0)\n        {\n            x = 0;\n        }\n        if (y + height > this.state.DimY)\n        {\n            y = this.state.DimY - height;\n        }\n        else if (y < 0)\n        {\n            y = 0;\n        }\n        control.style.posX = x;\n        control.style.posY = y;\n\n\n        control_list[control.key] = control;\n        this.setState({current_select: control ,\n                        control_list: control_list,\n                        enableSave: false});\n    }\n\n    updateResize(width, height, position)\n    {\n        if (position.x == 0 && position.y == 0)\n        {\n            return;\n        }\n        console.log(width,height, position);\n        var control = JSON.parse(JSON.stringify(this.state.current_select));\n        var control_list = JSON.parse(JSON.stringify(this.state.control_list));\n        if (typeof width === 'string')\n        {\n            width = Number(width.slice(0,-2));\n        }\n        if (typeof height === 'string')\n        {\n            height = Number(height.slice(0,-2));\n        }\n\n        if (position.x + width > this.state.DimX)\n        {\n            width = width - (width + position.x - this.state.DimX);\n        }\n        if (position.y + height > this.state.DimY)\n        {\n            height = height - (height + position.y - this.state.DimY);\n        }\n        if (position.x < 0)\n        {\n            control.style.posX = 0;\n        }\n        else\n        {\n            control.style.posX = position.x;\n        }\n        if (position.y < 0)\n        {\n            control.style.posY = 0;\n        }\n        else\n        {\n            control.style.posY = position.y;\n        }\n        control.style.width = width;\n        control.style.height = height;\n        control_list[control.key] = control;\n        this.setState({current_select: control ,\n                        control_list: control_list,\n                        enableSave: false});\n    }\n\n    updateProperty(property,fontSize, fontColor, borderWidth, borderRadius,borderColor,backGroundColor)\n    {\n        console.log(property, fontSize, fontColor, borderWidth, borderRadius,borderColor);\n\n\n        var control = JSON.parse(JSON.stringify(this.state.current_select));\n        var control_list = JSON.parse(JSON.stringify(this.state.control_list));\n        control.value = property;\n        control.style.fontSize = Number(fontSize);\n        control.style.fontColor = fontColor;\n        control.style.borderWidth = Number(borderWidth);\n        control.style.borderRadius = Number(borderRadius);\n        control.style.borderColor = borderColor;\n        control.style.backgroundColor = backGroundColor;\n        control_list[control.key] = control;\n        this.setState({current_select: control ,\n                       control_list: control_list,\n                       enableSave: false});\n        \n        console.log(this.state.current_select);\n    }\n\n    updateProperty_Container(borderWidth, borderRadius, borderColor)\n    {\n        console.log(borderWidth, borderRadius);\n\n\n        var control = JSON.parse(JSON.stringify(this.state.current_select));\n        var control_list = JSON.parse(JSON.stringify(this.state.control_list));\n        control.style.borderWidth = Number(borderWidth);\n        control.style.borderRadius = Number(borderRadius);\n        control.style.borderColor = borderColor;\n        control_list[control.key] = control;\n        this.setState({current_select: control ,\n                       control_list: control_list,\n                       enableSave: false});\n        \n        \n        console.log(this.state.current_select);\n    }\n\n    showFontColor()\n    {\n        this.setState({showFontColor : !this.state.showFontColor});\n    }\n\n    showBorderColor()\n    {\n        this.setState({showBorderColor : !this.state.showBorderColor});\n    }\n\n    showBackgroundColor()\n    {\n        this.setState({showBackgroundColor : !this.state.showBackgroundColor});\n    }\n\n    // end\n\n    render() {\n        const auth = this.props.auth;\n        const WireFramer = this.props.WireFramer;\n        console.log(this.props);\n        console.log(this.state.control_list);\n        if (!auth.uid) {\n            return <Redirect to=\"/\" />;\n        }\n\n\n        if (!WireFramer)\n            return <React.Fragment />\n        \n        return (\n            <div class>\n                <div className=\"card-panel yellow lighten-5\" id = 'overall'>\n\n\n                    <div className=\"input-field\">\n                        <label className=\"active\" htmlFor=\"email\">Name</label>\n                        <input className=\"active\" type=\"text\" name=\"name\" id=\"name\" onChange={this.handleChange} defaultValue={WireFramer.name} />\n                    </div>\n\n                    <div id = \"left\">\n                        <PanelLeft \n                            WireFramer = {this.props.WireFramer} \n                            control_list = {this.state.control_list} \n                            updateState={this.updateState.bind(this)}\n                            DimX = {this.state.DimX} \n                            DimY = {this.state.DimY}\n                            updateZoomIn = {this.updateZoomIn.bind(this)}\n                            updateZoomOut = {this.updateZoomOut.bind(this)}\n                            enableSave = {this.state.enableSave}\n                            scale = {this.state.scale}\n                            enableZoomIn = {this.state.enableZoomIn}\n                            enableZoomOut = {this.state.enableZoomOut}\n                            disableSave = {this.disableSave.bind(this)}\n\n                        />\n                    </div>\n                    <div id = \"mid\"  className=\"card-panel yellow lighten-5\">\n                    <Diagram WireFramer = {this.props.WireFramer} \n                             control_list = {this.state.control_list} \n                             current_select = {this.state.current_select}\n                             updateSelect = {this.updateSelect.bind(this)} unselect = {this.unselect.bind(this)}\n                             DimX = {this.state.DimX} \n                             DimY = {this.state.DimY}\n                             updateRepos = {this.updateRepos.bind(this)}\n                             updateResize = {this.updateResize.bind(this)}\n                             scale = {this.state.scale}\n                             \n                    />\n                    </div>\n                    <div id =\"right\">\n                            {\n                            this.state.current_select ? \n                            <Property \n                                current_select = {this.state.current_select}\n                                updateProperty = {this.updateProperty.bind(this)}\n                                showFontColorBool = {this.state.showFontColor}\n                                showFontColor = {this.showFontColor.bind(this)}\n                                showBorderColorBool = {this.state.showBorderColor}\n                                showBorderColor = {this.showBorderColor.bind(this)}\n                                showBackgroundColorBool = {this.state.showBackgroundColor}\n                                showBackgroundColor = {this.showBackgroundColor.bind(this)}\n                                updateProperty_Container = {this.updateProperty_Container.bind(this)}\n                            />\n                            : <Dimension WireFramer = {this.props.WireFramer} updateDimState = {this.updateDimState.bind(this)}\n                            disableUpdate = {this.state.disableUpdate}\n                            enableUpdate = {this.enableUpdate.bind(this)}\n                            DimX = {this.state.DimX}\n                            DimY = {this.state.DimY}/>\n                            }\n                    </div>\n\n                    \n                    {/* <table>\n                        <tr>\n                            <td width = \"27%\">\n                                <PanelLeft WireFramer = {this.props.WireFramer} control_list = {this.state.control_list} updateState={this.updateState.bind(this)}/>\n                            </td>\n                                \n                            <td>\n                                <Diagram control_list = {this.state.control_list} updateSelect = {this.updateSelect.bind(this)} unselect = {this.unselect.bind(this)}/>\n                            </td>\n\n                            <td width = \"20%\">\n                                {\n                                    this.state.current_select && \n                                    <Property current_select = {this.state.current_select}/>\n                                }\n\n                            </td>\n                        </tr>\n                    </table> */}\n                    \n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const { id } = ownProps.match.params;\n    const { WireFramers } = state.firestore.data;\n    console.log(state.firestore);\n    const WireFramer = WireFramers ? WireFramers[id] : null;\n    // todoList.id = id;\n    if (WireFramer) {\n        WireFramer.id = id;\n    }\n\n    return {\n        WireFramer,\n        auth: state.firebase.auth,\n    };\n};\n\nconst ListScreenWithRoutter = withRouter(ListScreen);\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'WireFramers' },\n    ]),\n)(ListScreen);\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n// import ItemsList from './ItemsList.js'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\n\r\nimport { getFirestore } from 'redux-firestore';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass ItemScreen extends Component {\r\n\r\n    // componentDidMount() {\r\n    //     $(document).ready(function () {\r\n    //         $('.fixed-action-btn').floatingActionButton();\r\n    //     })\r\n    // }\r\n\r\n    state = {\r\n        current_item: []\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n\r\n        const script = document.createElement(\"script\");\r\n\r\n\r\n        const fireStore = getFirestore();\r\n        const { id, index } = this.props.match.params;\r\n        let b = await fireStore.collection('todoLists')\r\n            .doc(id).get();\r\n        let data = b.data();\r\n        console.log(data)\r\n        // let d = c.name\r\n        // console.log(d)\r\n        // return d.toString()\r\n        document.getElementById('item_description_textfield').value = data.items[index].description\r\n        document.getElementById('item_assigned_to_textfield').value = data.items[index].assigned_to\r\n        document.getElementById('item_due_date_picker').value = data.items[index].due_date\r\n\r\n        if (data.items[index].completed) {\r\n            document.getElementById('item_check_box').checked = 'checked'\r\n        }\r\n\r\n        // this.state.current_item = data.items\r\n        // this.state({current_item: data.items})\r\n        this.setState({ current_item: data.items });\r\n\r\n    }\r\n\r\n\r\n    // async description() {\r\n    //     const fireStore = getFirestore();\r\n    //     const { id, index } = this.props.match.params;\r\n    //     let b = await fireStore.collection('todoLists')\r\n    //         .doc(id).get();\r\n    //     let c = b.data();\r\n    //     // let d = c.name\r\n    //     // console.log(d)\r\n    //     // return d.toString()\r\n    //     document.getElementById('item_description_textfield').value = c.name\r\n    // }\r\n\r\n    async update() {\r\n        // console.log(this.state.current_item);\r\n        const { id, index } = this.props.match.params;\r\n        // let data = this.state.current_item;\r\n        var data = JSON.parse(JSON.stringify(this.state.current_item));\r\n        console.log(data);\r\n        data[index].assigned_to = document.getElementById('item_assigned_to_textfield').value;\r\n        data[index].description = document.getElementById('item_description_textfield').value;\r\n        data[index].due_date = document.getElementById('item_due_date_picker').value;\r\n\r\n        if (document.getElementById('item_check_box').checked) {\r\n            data[index].completed = true;\r\n        }\r\n        else {\r\n            data[index].completed = false;\r\n        }\r\n\r\n        console.log(data);\r\n\r\n        const fireStore = getFirestore();\r\n        await fireStore.collection('todoLists')\r\n            .doc(id)\r\n            // .where('id', '==', this.props.todoList.id)\r\n            .update({\r\n                items: data\r\n\r\n            });\r\n        this.props.history.push(\"/todoList/\" + id)\r\n    }\r\n\r\n    goList() {\r\n        const { id, index } = this.props.match.params;\r\n        this.props.history.push(\"/todoList/\" + id)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n                <br></br>\r\n                <div id=\"todo_edit\" class=\"card-panel yellow lighten-5\">\r\n                    {/* <div class=\"fixed-action-btn\">\r\n                    <a class=\"btn-floating btn-large red\">\r\n                        <i class=\"large material-icons\">mode_edit</i>\r\n                    </a>\r\n                    <ul>\r\n                        <li><a class=\"btn-floating red\"><i class=\"material-icons\">insert_chart</i></a></li>\r\n                        <li><a class=\"btn-floating yellow darken-1\"><i class=\"material-icons\">format_quote</i></a></li>\r\n                        <li><a class=\"btn-floating green\"><i class=\"material-icons\">publish</i></a></li>\r\n                        <li><a class=\"btn-floating blue\"><i class=\"material-icons\">attach_file</i></a></li>\r\n                    </ul>\r\n                </div> */}\r\n                    <div id=\"item_heading\">Item</div>\r\n                    <div id=\"item_form_container\">\r\n                        <input placeholder=\"Description\" id=\"item_description_textfield\" type=\"text\" class=\"validate\" />\r\n                        <label for=\"Description\">Description</label>\r\n                        <input placeholder=\"Assign To\" id=\"item_assigned_to_textfield\" type=\"text\" class=\"validate\" />\r\n                        <label for=\"Assign To\">Assign To</label>\r\n                        <input placeholder=\"Due Date\" id=\"item_due_date_picker\" type=\"date\" class=\"validate\" />\r\n                        <label for=\"Due Date\">Due Date</label>\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <label>\r\n                            <input type=\"checkbox\" id='item_check_box' />\r\n                            <span>Complete</span>\r\n                        </label>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <div>\r\n                            <button onClick={() => this.update()} class=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\" >Submit\r\n                        <i class=\"material-icons right\">send</i>\r\n                            </button>\r\n                            <button onClick={() => this.goList()} class=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Cancel\r\n                        <i class=\"material-icons right\">close</i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(ItemScreen);\r\n\r\n// const mapStateToProps = (state, ownProps) => {\r\n//     const { id } = ownProps.match.params;\r\n//     const { todoLists } = state.firestore.data;\r\n//     console.log(state.firestore);\r\n//     const todoList = todoLists ? todoLists[id] : null;\r\n//     todoList.id = id;\r\n\r\n//     return {\r\n//         todoList,\r\n//         auth: state.firebase.auth,\r\n//     };\r\n// };\r\n\r\n\r\n// export default compose(\r\n//     connect(mapStateToProps),\r\n//     firestoreConnect([\r\n//         { collection: 'todoLists' },\r\n//     ]),\r\n// )(ItemScreen);","import React from 'react'\nimport { connect } from 'react-redux';\nimport todoJson from './TestTodoListData.json'\nimport { getFirestore } from 'redux-firestore';\nimport { firestore } from 'firebase';\n\nclass DatabaseTester extends React.Component {\n\n    // NOTE, BY KEEPING THE DATABASE PUBLIC YOU CAN\n    // DO THIS ANY TIME YOU LIKE WITHOUT HAVING\n    // TO LOG IN\n    handleClear = () => {\n        const fireStore = getFirestore();\n        fireStore.collection('WireFramers').get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n                console.log(\"deleting \" + doc.id);\n                fireStore.collection('WireFramers').doc(doc.id).delete();\n            })\n        });\n    }\n\n    handleReset = () => {\n        // there are auth under the\n        // owner is auth's email\n        // is the same and items -> list\n        // however, reset for each user.\n\n        console.log(this.props);\n\n        const fireStore = getFirestore();\n\n        const { auth } = this.props;\n\n\n        fireStore.collection('users').get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n                console.log(\"deleting \" + doc.data().email);\n                // for(var i = 0; i < 3; i++)\n                // {\n                //     console.log(i);\n                // }\n\n                todoJson.WireFramers.forEach(todoListJson => {\n                    fireStore.collection('WireFramers').add({\n                        name: todoListJson.name,\n                        owner: doc.data().email,\n                        list: todoListJson.list,\n                        time: new Date().getTime(),\n                        DimX : todoListJson.DimX,\n                        DimY : todoListJson.DimY\n                    }).then(() => {\n                        console.log(\"DATABASE RESET\");\n                    }).catch((err) => {\n                        console.log(err);\n                    });\n                });\n            })\n        });\n\n        // if (auth.isLoaded) {\n        //     var doc =  fireStore.collection('users').get().then(\n        //         (doc) => {console.log(doc.data())}\n        //     )\n        // }\n      \n\n\n\n        // doc.get().then((doc) => {this.setState({admin: doc.data().isAdmin})});\n        // const fireStore = getFirestore();\n        // todoJson.todoLists.forEach(todoListJson => {\n        //     fireStore.collection('todoLists').add({\n        //         name: todoListJson.name,\n        //         owner: todoListJson.owner,\n        //         items: todoListJson.items,\n        //         time: new Date().getTime()\n        //     }).then(() => {\n        //         console.log(\"DATABASE RESET\");\n        //     }).catch((err) => {\n        //         console.log(err);\n        //     });\n        // });\n    }\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.handleClear}>Clear Database</button>\n                <button onClick={this.handleReset}>Reset Database</button>\n            </div>)\n    }\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        auth: state.firebase.auth,\n        firebase: state.firebase\n    };\n}\n\nexport default connect(mapStateToProps)(DatabaseTester);","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\n\nimport Navbar from './components/navbar/Navbar.js';\nimport RegisterScreen from './components/register_screen/RegisterScreen.js';\nimport LoginScreen from './components/login_screen/LoginScreen.js';\nimport HomeScreen from './components/home_screen/HomeScreen.js';\n\n// import EditScreen from './components/EDIT_SCREEN/EditScreen.js'\n\n//  OLD SCREENS\nimport ListScreen from './components/list_screen/ListScreen.js';\nimport ItemScreen from './components/item_screen/ItemScreen.js'\nimport DatabaseTester from './test/DatabaseTester'\n\nimport { getFirestore } from 'redux-firestore';\n\nimport { thisTypeAnnotation } from '@babel/types';\nimport { firestore } from 'firebase';\n\nclass App extends Component {\n\n  // isAdmin = async (auth) => {\n  //   const fireStore = getFirestore();\n\n  //   const uid = auth.uid;\n\n  //   if (uid)\n  //   // const docRef = await fireStore.collection('users').doc(this.props.uid);\n\n \n\n\n\n//   async componentDidMount (){\n//     const fireStore = getFirestore();\n//     console.log(this.props.uid)\n\n//   }\n\n state = {\n    admin : null\n  }\n\n\n  render() {\n    const { auth } = this.props;\n    \n    console.log(auth);\n    \n\n    if (auth.isLoaded) {\n      // var bool = null;\n\n      if (this.state.admin == null && auth.uid != undefined)\n      {\n        const fireStore = getFirestore();\n      \n        var doc =  fireStore.collection('users').doc(auth.uid);\n\n        // doc.get().then((doc) => {this.setState({admin: doc.data().isAdmin})});\n\n        doc.get().then((doc) => {this.setState({admin: doc.data().isAdmin})});\n        \n      }\n      \n      \n      return (\n\n        <BrowserRouter>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              {this.state.admin && <Route path=\"/databaseTester\" component={DatabaseTester} />}\n              <Route path=\"/register\" component={RegisterScreen} />\n              {!this.props.auth.uid && <Route component={LoginScreen} />}\n              <Route exact path=\"/\" component={HomeScreen} />\n              <Route path=\"/login\" component={LoginScreen} />\n              <Route exact path=\"/WireFramers/:id\" component={ListScreen} />\n\n\n              {/* <Route exact path=\"/todoList/:id\" component={ListScreen} />\n              <Route path=\"/todoList/:id/item/:index\" component={ItemScreen} /> */}\n              <Route path=\"/:any\" component={HomeScreen} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(App);","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from '../config/firebaseConfig';\nimport rootReducer from './reducers/rootReducer';\nimport App from '../App';\n\nclass ReactReduxFirebaseApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // We enhance compose in order to use Redux DevTools extension\n        // https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\n        const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n        // Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\n        const rrfConfig = {\n            useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n            userProfile: 'users',\n            attachAuthIsReady: true,\n        };\n\n        const store = createStore(rootReducer,\n            composeEnhancers(\n                applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n                reduxFirestore(firebase), // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\n            )\n        );\n\n        const rrfProps = {\n            firebase,\n            config: rrfConfig,\n            dispatch: store.dispatch,\n            createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\n        };\n\n        this.state = {\n            store: store,\n            rrfProps: rrfProps\n        }\n    }\n\n    render() {\n        return (\n            <Provider store={this.state.store}>\n                <ReactReduxFirebaseProvider {...this.state.rrfProps}>\n                    <App />\n                </ReactReduxFirebaseProvider>\n            </Provider>\n        )\n    }\n}\n\nexport default ReactReduxFirebaseApp","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/todo_layout.css'\nimport './css/todo_style.css'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker';\n\nimport ReactReduxFirebaseApp from './store/ReactReduxFirebaseApp'\n\n\nReactDOM.render(\n  <ReactReduxFirebaseApp />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}